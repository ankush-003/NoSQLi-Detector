[
  {
    "text": "|| 1==1:",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '':",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}|",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'\"",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500{",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);)",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass})",
    "label": 0
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}|",
    "label": 1
  },
  {
    "text": "|| sleep(5)*",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}'",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}|",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})}",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1[",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": |}}*",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": $}, {\"isAdmin\": true}]})",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})'",
    "label": 0
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'{",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'=",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)*",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})$",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'=",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}\"",
    "label": 0
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}){",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();)",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": :}}'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": |}}'",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}(",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1')",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"}}=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});}",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}'",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}]",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": {}}\"",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})*",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'(",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']}):",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": *}, {\"isAdmin\": true}]}'",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();}",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1';",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27$",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27[",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1'",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": :}}=",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'}",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500}",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}):",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})]",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1''",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}\"",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});$",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}[",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();\"",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}:",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500*",
    "label": 1
  },
  {
    "text": "|| sleep(5);",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '']",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}})",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a*",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"})",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}(",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"};",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'(",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1';",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"})",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500|",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'|",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'}",
    "label": 1
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": {}})",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1')",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}\"",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})*",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'*",
    "label": 0
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": *}})",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}=",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}};",
    "label": 0
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27]",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();^",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": '}, {\"isAdmin\": true}]}'",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1=",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1''",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1''",
    "label": 1
  },
  {
    "text": "0;return true*",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}|",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'}",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}[",
    "label": 0
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1^",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27=",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}$",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": ^}}'",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1^",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']});",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'|",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": ;}, {\"isAdmin\": true}]}\"",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'^",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto=",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a|",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection']",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)*",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}'",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "{\"user\": ], \"password\": ]}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();^",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a;",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}:",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "|| sleep(5);",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();:",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();*",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);'",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'(",
    "label": 1
  },
  {
    "text": "|| sleep(5)=",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": ]}, {\"isAdmin\": true}]}{",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27$",
    "label": 1
  },
  {
    "text": "|| sleep(5)'",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'*",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})(",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});^",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "|| sleep(5))",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": |}}|",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'\"",
    "label": 1
  },
  {
    "text": "|| sleep(5))",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'(",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}[",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}^",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection':",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}[",
    "label": 0
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": $}}(",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'^",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a\"",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "|| 1==1=",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": '}, {\"isAdmin\": true}]})",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}{",
    "label": 0
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500\"",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'{",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password';",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})(",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": )}, {\"isAdmin\": true}]}]",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a[",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'(",
    "label": 1
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "|| 1==1[",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'[",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email']",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']}):",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1';",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}{",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27)",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}(",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500]",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})(",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '':",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();(",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}'",
    "label": 1
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "|| 1==1^",
    "label": 1
  },
  {
    "text": "|| sleep(5)|",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1\"",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019}",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();^",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}[",
    "label": 0
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})=",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}}",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}^",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}$",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}=",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})}",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone';",
    "label": 0
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": )}}*",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);^",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "0;return true*",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})\"",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']}){",
    "label": 0
  },
  {
    "text": "{}*",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019:",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'*",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}]",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}|",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27$",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a=",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}}){",
    "label": 0
  },
  {
    "text": "|| sleep(5)|",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"})",
    "label": 1
  },
  {
    "text": "0;return true'",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}{",
    "label": 0
  },
  {
    "text": "0;return true*",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ^}})",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})]",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})^",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}|",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "|| 1==1^",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "{}(",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": *}, {\"isAdmin\": true}]}$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}|",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": }}}'",
    "label": 1
  },
  {
    "text": "0;return true=",
    "label": 1
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})'",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}]",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1'",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});|",
    "label": 1
  },
  {
    "text": "{\"user\": ^, \"password\": ^}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}{",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}(",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}$",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}\"",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}$",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection':",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'{",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})*",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1']",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password']",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})=",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto)",
    "label": 1
  },
  {
    "text": "|| 1==1^",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}*",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'[",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000))",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}\"",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}{",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a|",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019(",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}};",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": *}}'",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})[",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1\"",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "{}{",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']};",
    "label": 0
  },
  {
    "text": "|| 1==1'",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}})",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27\"",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1')",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}{",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": {}, {\"isAdmin\": true}]}^",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "|| sleep(5))",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password''",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019'",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1}",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}|",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"})",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();}",
    "label": 1
  },
  {
    "text": "|| 1==1*",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1:",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27;",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "|| 1==1[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": =}}$",
    "label": 1
  },
  {
    "text": "|| sleep(5)[",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}\"",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": }}}]",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}=",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "|| 1==1;",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": ^}}$",
    "label": 1
  },
  {
    "text": "0;return true{",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}=",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a=",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})=",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);(",
    "label": 1
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}|",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1\"",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'[",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500'",
    "label": 1
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "|| sleep(5)*",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000))",
    "label": 1
  },
  {
    "text": "$where: '1 == 1''",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}|",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}};",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1')",
    "label": 1
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'$",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']});",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});\"",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}$",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']});",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": ;}, {\"isAdmin\": true}]}[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}^",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}]",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}(",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}^",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019|",
    "label": 1
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}{",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": *}, {\"isAdmin\": true}]}=",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection':",
    "label": 1
  },
  {
    "text": "0;return true:",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27=",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}\"",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": }}, {\"isAdmin\": true}]}]",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{};",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'[",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}^",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": )}}]",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": ]}, {\"isAdmin\": true}]}$",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}=",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"};",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}^",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "|| 1==1)",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": ^}}^",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}}",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "|| sleep(5);",
    "label": 1
  },
  {
    "text": "{\"user\": (, \"password\": (}]",
    "label": 0
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'*",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);)",
    "label": 1
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}})",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}$",
    "label": 1
  },
  {
    "text": "|| 1==1^",
    "label": 1
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto;",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})}",
    "label": 0
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}[",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": $}}{",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1{",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}[",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}:",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}^",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "|| 1==1]",
    "label": 1
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto=",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"};",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}]",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"user\": ', \"password\": '}*",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": *}}:",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}]",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});[",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'^",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}{",
    "label": 0
  },
  {
    "text": "|| sleep(5)(",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'^",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}\"",
    "label": 1
  },
  {
    "text": "{}$",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}{",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}]",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})}",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27^",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}]",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})|",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''$",
    "label": 0
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}\"",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": *}, {\"isAdmin\": true}]}$",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1']",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}\"",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})=",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})'",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}{",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}^",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'*",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019\"",
    "label": 1
  },
  {
    "text": "|| sleep(5)'",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}|",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}'",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']};",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": }}, {\"isAdmin\": true}]}*",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500'",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "|| 1==1=",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "{}[",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)|",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}=",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password']",
    "label": 0
  },
  {
    "text": "{}]",
    "label": 0
  },
  {
    "text": "|| 1==1]",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});'",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});]",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'|",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password';",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000))",
    "label": 1
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}(",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}=",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}{",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)*",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})[",
    "label": 0
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}^",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1;",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000))",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'[",
    "label": 0
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}$",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto)",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);^",
    "label": 1
  },
  {
    "text": "{\"user\": *, \"password\": *}\"",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}})",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": '}}}",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500^",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}]",
    "label": 0
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a)",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}=",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}]",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}{",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}[",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1\"",
    "label": 1
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);'",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}=",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}(",
    "label": 0
  },
  {
    "text": "{\"user\": ;, \"password\": ;}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})",
    "label": 1
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}\"",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '';",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})]",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto)",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password';",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();$",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']});",
    "label": 0
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})=",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})^",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "|| sleep(5){",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}*",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'[",
    "label": 1
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);;",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019^",
    "label": 1
  },
  {
    "text": "$where: '1 == 1']",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "|| sleep(5)}",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})^",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)|",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})=",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a[",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a;",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}\"",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}))",
    "label": 1
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}(",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}*",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1;",
    "label": 1
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "|| sleep(5){",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'\"",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto[",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "|| sleep(5)(",
    "label": 1
  },
  {
    "text": "';sleep(5000);'",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass};",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);(",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500]",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1':",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": =}};",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}\"",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'\"",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}};",
    "label": 1
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27)",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}$",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}|",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email']",
    "label": 0
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}$",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'(",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}{",
    "label": 0
  },
  {
    "text": "|| 1==1\"",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'(",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})*",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019]",
    "label": 1
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a(",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a=",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'*",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1''",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}{",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": =}}(",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'|",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}{",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}[",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": [}}{",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "$where: '1 == 1')",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "0;return true[",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}]",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a'",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})$",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto'",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}(",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500}",
    "label": 1
  },
  {
    "text": "0;return true\"",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500|",
    "label": 1
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": |}}{",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ^}}*",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": *}}*",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)=",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}}",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}){",
    "label": 1
  },
  {
    "text": "|| sleep(5);",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password})",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}^",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}:",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019'",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})\"",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "|| sleep(5)=",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})$",
    "label": 1
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}:",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'{",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27;",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'^",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();=",
    "label": 1
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "|| 1==1;",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1[",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''=",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}{",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1$",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})=",
    "label": 1
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection':",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})]",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}\"",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}*",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": [}}=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();=",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": =}}(",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}};",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}]",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": ]}}'",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '''",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)[",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000);",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});:",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": ]}, {\"isAdmin\": true}]}$",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1*",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}\"",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}\"",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'(",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}|",
    "label": 0
  },
  {
    "text": "|| sleep(5)[",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}(",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();]",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "{}{",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();;",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}[",
    "label": 1
  },
  {
    "text": "|| 1==1;",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'$",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "|| sleep(5)'",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']}))",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27(",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}[",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019)",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}=",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}'",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})'",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}\"",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"})",
    "label": 0
  },
  {
    "text": "{\"user\": |, \"password\": |};",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection')",
    "label": 1
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}})",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": |}})",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);^",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500=",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''*",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1}",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})(",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})|",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})=",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "{}{",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();=",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})*",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'[",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}};",
    "label": 1
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019'",
    "label": 1
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{\"user\": (, \"password\": (}=",
    "label": 0
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"})",
    "label": 1
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);(",
    "label": 1
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}{",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1']",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}{",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'{",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})'",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'{",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": :}}*",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}[",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})}",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500]",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);)",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'|",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}(",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']}))",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "|| sleep(5)(",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1]",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})'",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a$",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'^",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"};",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}$",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})*",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}(",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']});",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});[",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}=",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '';",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27}",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}$",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}:",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"}}\"",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}=",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}=",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27)",
    "label": 1
  },
  {
    "text": "{}\"",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'*",
    "label": 1
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}(",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1|",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'*",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}}))",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "{}|",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)(",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "|| 1==1;",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}[",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}*",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})'",
    "label": 1
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "0;return true:",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})'",
    "label": 0
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "0;return true:",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});[",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}(",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)\"",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}]",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection':",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})\"",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})\"",
    "label": 1
  },
  {
    "text": "{}{",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'$",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});|",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}[",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"})",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": [}}*",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}]",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500]",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'(",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}|",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}=",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''\"",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}=",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500[",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}\"",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();[",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}[",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": ;}, {\"isAdmin\": true}]}|",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']}))",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']}):",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": |}}=",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "0;return true\"",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);)",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": ]}, {\"isAdmin\": true}]}|",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019'",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019{",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})}",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ]}}'",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']}){",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}=",
    "label": 1
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}\"",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500$",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'|",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": *}}]",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500\"",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'(",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''{",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}[",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27^",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password};",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}$",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}'",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});'",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1']",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ;}}]",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}]",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']};",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}})",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();[",
    "label": 1
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});:",
    "label": 1
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1|",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"})",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}^",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1:",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'$",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}\"",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}'",
    "label": 1
  },
  {
    "text": "0;return true\"",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "|| sleep(5)*",
    "label": 1
  },
  {
    "text": "0;return true{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}]",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a)",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto$",
    "label": 1
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});'",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});]",
    "label": 1
  },
  {
    "text": "{};",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password')",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''*",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}$",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": $}}\"",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}})",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}$",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}$",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019[",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}))",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}:",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}{",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}[",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019^",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}(",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})^",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"})",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}(",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}{",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": ]}})",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}]",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''(",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": }}, {\"isAdmin\": true}]}^",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500}",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'{",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "|| sleep(5))",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{}^",
    "label": 0
  },
  {
    "text": "$where: '1 == 1':",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});$",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);;",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500^",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})^",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}'",
    "label": 0
  },
  {
    "text": "|| 1==1)",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a[",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": \"}, {\"isAdmin\": true}]}$",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019^",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}*",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});)",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto(",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}[",
    "label": 0
  },
  {
    "text": "|| 1==1^",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500*",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}\"",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}}",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto*",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019}",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}(",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}'",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})^",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}[",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();|",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}]",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}^",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": ;}, {\"isAdmin\": true}]}{",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500=",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})*",
    "label": 0
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '')",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}(",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})^",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})]",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}]",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''*",
    "label": 0
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "0;return true:",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}^",
    "label": 1
  },
  {
    "text": "{\"user\": ^, \"password\": ^}{",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'*",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})(",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}$",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ]}};",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}=",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}|",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection':",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})'",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'$",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})|",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});[",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500=",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}(",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": }}}|",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}=",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a:",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1$",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1{",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})*",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}^",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'}",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}{",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1^",
    "label": 1
  },
  {
    "text": "{};",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)|",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}^",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a|",
    "label": 1
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}(",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500^",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500;",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000){",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})]",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}=",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a\"",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();)",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'|",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}]",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);(",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "|| sleep(5)}",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'$",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}]",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1''",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}^",
    "label": 1
  },
  {
    "text": "|| 1==1\"",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)=",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'*",
    "label": 1
  },
  {
    "text": "|| 1==1\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}|",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "|| 1==1'",
    "label": 1
  },
  {
    "text": "0;return true*",
    "label": 1
  },
  {
    "text": "|| sleep(5)'",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'^",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000){",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a}",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}[",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}^",
    "label": 0
  },
  {
    "text": "|| 1==1]",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"};",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "{}|",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500\"",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}(",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})'",
    "label": 0
  },
  {
    "text": "0;return true[",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}'",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''[",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}$",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});'",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a*",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();:",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});:",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}{",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}$",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}|",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "0;return true)",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)^",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "|| sleep(5){",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": (}};",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})=",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"})",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto*",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})\"",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500}",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}^",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto;",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto$",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{}=",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});|",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}'",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "|| sleep(5)*",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "{}[",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})|",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500]",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a^",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})$",
    "label": 1
  },
  {
    "text": "|| 1==1'",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}{",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'*",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})(",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}]",
    "label": 0
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();(",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}(",
    "label": 1
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'|",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"})",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "0;return true{",
    "label": 1
  },
  {
    "text": "$where: '1 == 1')",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}^",
    "label": 0
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}}",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": }}})",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}}",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})(",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1')",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}=",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}=",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}=",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();;",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}\"",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500]",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019|",
    "label": 1
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}*",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();|",
    "label": 1
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": |}}^",
    "label": 1
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "0;return true[",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1''",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'(",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})}",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1;",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500\"",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)^",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}=",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}})",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27|",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})[",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1']",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}})",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "|| sleep(5)(",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}\"",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": :}}^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}(",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection':",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'\"",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a'",
    "label": 1
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a=",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''$",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'(",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "|| sleep(5){",
    "label": 1
  },
  {
    "text": "{}:",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "|| 1==1=",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}:",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}}",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']});",
    "label": 0
  },
  {
    "text": "$where: '1 == 1''",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1|",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}[",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'(",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"};",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}:",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}){",
    "label": 1
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}:",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500$",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}$",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}}",
    "label": 0
  },
  {
    "text": "0;return true[",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})(",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "|| 1==1}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}})",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": {}}}",
    "label": 1
  },
  {
    "text": "|| 1==1=",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})\"",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})\"",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})=",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "|| 1==1)",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})$",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}{",
    "label": 0
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}}):",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'\"",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']}){",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})\"",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})=",
    "label": 0
  },
  {
    "text": "';sleep(5000);'",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection''",
    "label": 1
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}})",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27$",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();)",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}){",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});^",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1]",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1=",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}})",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);'",
    "label": 1
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone')",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": {}, {\"isAdmin\": true}]}*",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'$",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);;",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();}",
    "label": 1
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();{",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ]}}^",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto}",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']}))",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}})",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000){",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']});",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});|",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'}",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": [}}$",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "0;return true=",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);}",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})]",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019'",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}]",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1';",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500'",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "{}*",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'{",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});*",
    "label": 1
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}$",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();{",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}(",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}:",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}$",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1^",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})$",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'*",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'{",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}]",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1[",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}=",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})*",
    "label": 0
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a}",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '':",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'\"",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1':",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password':",
    "label": 0
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": }}}{",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'\"",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019=",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}[",
    "label": 0
  },
  {
    "text": "|| 1==1)",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "|| 1==1}",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}(",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1^",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'^",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']}):",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)}",
    "label": 1
  },
  {
    "text": "$where: '1 == 1':",
    "label": 1
  },
  {
    "text": "|| sleep(5)\"",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019|",
    "label": 1
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "{\"user\": [, \"password\": [}'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019)",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})*",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019'",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'|",
    "label": 0
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}$",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": ]}, {\"isAdmin\": true}]}\"",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}}",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1=",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();^",
    "label": 1
  },
  {
    "text": "|| 1==1$",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection']",
    "label": 1
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)}",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"};",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'{",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}}",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}:",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"}}(",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}\"",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email')",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}\"",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": {}}=",
    "label": 1
  },
  {
    "text": "$where: '1 == 1']",
    "label": 1
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}[",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}'",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27^",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}^",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}$",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);;",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}'",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": =}, {\"isAdmin\": true}]}|",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''^",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}*",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();'",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27]",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})^",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1']",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000){",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": :}}}",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27;",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a\"",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'}",
    "label": 0
  },
  {
    "text": "|| sleep(5)}",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}^",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}{",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})*",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'\"",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}\"",
    "label": 0
  },
  {
    "text": "|| sleep(5))",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'|",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019:",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}]",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500$",
    "label": 1
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}]",
    "label": 1
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1'",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500:",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019;",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'{",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}\"",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}(",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'$",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})*",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}|",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}})",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']}){",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"})",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})=",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'=",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1';",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1]",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500=",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27]",
    "label": 1
  },
  {
    "text": "0;return true{",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}){",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1')",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "0;return true=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}]",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']}){",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1']",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'|",
    "label": 1
  },
  {
    "text": "{\"user\": {, \"password\": {}[",
    "label": 0
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);'",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'=",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});;",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}:",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}|",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "|| sleep(5)=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})]",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1^",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}|",
    "label": 1
  },
  {
    "text": "0;return true*",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto^",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}{",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'^",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": (}}^",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}\"",
    "label": 0
  },
  {
    "text": "';sleep(5000);'",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1]",
    "label": 1
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})\"",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1]",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'{",
    "label": 0
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500:",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})(",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}:",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1=",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1''",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}\"",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'^",
    "label": 0
  },
  {
    "text": "{}\"",
    "label": 0
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();=",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();{",
    "label": 1
  },
  {
    "text": "0;return true\"",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1:",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});}",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'{",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}\"",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": '}}(",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}{",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"})",
    "label": 0
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}[",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019]",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}});",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}{",
    "label": 0
  },
  {
    "text": "0;return true{",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}'",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "|| sleep(5)(",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "{}[",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}[",
    "label": 0
  },
  {
    "text": "|| 1==1:",
    "label": 1
  },
  {
    "text": "{\"user\": }, \"password\": }}[",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500$",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto{",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000);",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});$",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "{\"user\": }, \"password\": }}$",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();]",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "{\"user\": :, \"password\": :}*",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}[",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a{",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'\"",
    "label": 1
  },
  {
    "text": "|| sleep(5){",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'{",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}]",
    "label": 0
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();)",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})\"",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1}",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500(",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}]",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'(",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'[",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}))",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1\"",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();|",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "|| sleep(5))",
    "label": 1
  },
  {
    "text": "0;return true)",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}|",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'[",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"}}}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}[",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);(",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'[",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']}))",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": =}, {\"isAdmin\": true}]}:",
    "label": 1
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}^",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)]",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})\"",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1:",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'=",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019*",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}};",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1^",
    "label": 1
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']}))",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);)",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);^",
    "label": 1
  },
  {
    "text": "|| 1==1$",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}]",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345':",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})[",
    "label": 0
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1';",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto*",
    "label": 1
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);}",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1\"",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1'",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}(",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1^",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})]",
    "label": 0
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27;",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}{",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);)",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'\"",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})\"",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "{\"user\": :, \"password\": :})",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}$",
    "label": 1
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": }}}[",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500{",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto[",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'(",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}$",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'$",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto{",
    "label": 1
  },
  {
    "text": "|| 1==1}",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'^",
    "label": 0
  },
  {
    "text": "|| sleep(5)*",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500*",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto|",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}]",
    "label": 1
  },
  {
    "text": "$where: '1 == 1')",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}(",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}*",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}})",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'|",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto'",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})$",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});'",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email']",
    "label": 0
  },
  {
    "text": "{\"user\": :, \"password\": :}[",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();$",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'|",
    "label": 1
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'[",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']}):",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '':",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});|",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1=",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}*",
    "label": 0
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}:",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500]",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}{",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})(",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}'",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}*",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}=",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1]",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1(",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000))",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);}",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": =}}|",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection')",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019=",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'|",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1';",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})|",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}^",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "0;return true}",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": =}, {\"isAdmin\": true}]}(",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}$",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": )}}}",
    "label": 1
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}{",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}};",
    "label": 1
  },
  {
    "text": "0;return true'",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}'",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto}",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a'",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})|",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}$",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}]",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})^",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})*",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a[",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27]",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "{\"user\": =, \"password\": =}'",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();]",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}$",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}[",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}(",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'{",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)$",
    "label": 1
  },
  {
    "text": "|| 1==1}",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}'",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)}",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}(",
    "label": 0
  },
  {
    "text": "|| 1==1$",
    "label": 1
  },
  {
    "text": "0;return true{",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000);",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500]",
    "label": 1
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto$",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "|| 1==1;",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})*",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}]",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1':",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}{",
    "label": 0
  },
  {
    "text": "0;return true}",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1')",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}]",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();{",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}{",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})*",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}]",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1|",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}[",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}'",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "|| 1==1;",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1\"",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a[",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})'",
    "label": 1
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();{",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();^",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27*",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}|",
    "label": 0
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": :}}\"",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1']",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})]",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);;",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}'",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": \"}, {\"isAdmin\": true}]}]",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}[",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27*",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});}",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);'",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});\"",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}=",
    "label": 0
  },
  {
    "text": "0;return true}",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a'",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "|| 1==1[",
    "label": 1
  },
  {
    "text": "|| 1==1\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": ;}}^",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": :}, {\"isAdmin\": true}]}=",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();\"",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": }}}[",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']});",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}|",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone''",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}$",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27=",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "0;return true}",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1''",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}(",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "0;return true\"",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']};",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)^",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}*",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'|",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": =}}^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": |}}:",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}]",
    "label": 0
  },
  {
    "text": "|| 1==1=",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})[",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}|",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})\"",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}^",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": =}}{",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}}",
    "label": 1
  },
  {
    "text": "|| sleep(5)*",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": $}}\"",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}^",
    "label": 1
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27[",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1;",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}}",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1'",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}|",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'^",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": )}, {\"isAdmin\": true}]}^",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}\"",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '')",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})[",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}]",
    "label": 1
  },
  {
    "text": "{\"user\": $, \"password\": $};",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019}",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{})",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection':",
    "label": 1
  },
  {
    "text": "|| sleep(5)\"",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})[",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}:",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}(",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1[",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1|",
    "label": 1
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1)",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": '}}$",
    "label": 1
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "|| sleep(5)\"",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}}){",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'*",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}:",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();}",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1\"",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "|| 1==1*",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": *}}{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "|| 1==1$",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'*",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email']",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a:",
    "label": 1
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}(",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);)",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": {}, {\"isAdmin\": true}]}(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}|",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1}",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection']",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}|",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "|| 1==1'",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}]",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})^",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": *}}]",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1';",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}*",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1[",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''[",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500:",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1')",
    "label": 1
  },
  {
    "text": "{\"user\": ], \"password\": ]}[",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a:",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": :}, {\"isAdmin\": true}]}{",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'^",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27:",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}$",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}}):",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}{",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}^",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}^",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'|",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1':",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27}",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": ;}, {\"isAdmin\": true}]}'",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});}",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}=",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500}",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1':",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);'",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})(",
    "label": 0
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});$",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a*",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019)",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}{",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}^",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})\"",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();*",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}]",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})=",
    "label": 0
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}{",
    "label": 1
  },
  {
    "text": "|| 1==1=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}$",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}'",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1:",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto\"",
    "label": 1
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});\"",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}(",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"})",
    "label": 0
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"};",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}]",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email']",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}};",
    "label": 1
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})}",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1\"",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})(",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'[",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }};",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto)",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "|| sleep(5)\"",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a{",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});*",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)(",
    "label": 1
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']})",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}]",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']});",
    "label": 0
  },
  {
    "text": "0;return true;",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}$",
    "label": 0
  },
  {
    "text": "|| sleep(5)'",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})*",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}}",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']}){",
    "label": 0
  },
  {
    "text": "{\"user\": {, \"password\": {};",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{}^",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto(",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'\"",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019\"",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1}",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}$",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27(",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto\"",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'=",
    "label": 0
  },
  {
    "text": "|| 1==1^",
    "label": 1
  },
  {
    "text": "0;return true;",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'$",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27;",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);;",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'$",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a\"",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": ^}, {\"isAdmin\": true}]}[",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "|| 1==1'",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27{",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "|| sleep(5)}",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}){",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);(",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{}}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1':",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1']",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "|| sleep(5)(",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1=",
    "label": 1
  },
  {
    "text": "0;return true'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}]",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}[",
    "label": 0
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "|| sleep(5)}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": ]}})",
    "label": 1
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}|",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1(",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();=",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})\"",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}]",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a'",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": $}}(",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);'",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}'",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}[",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{}{",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})\"",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019]",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1';",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}:",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone':",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": ;}}\"",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": $}}'",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "|| sleep(5)|",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1')",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}})",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": {}}}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password';",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)*",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)^",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();=",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}'",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27{",
    "label": 1
  },
  {
    "text": "0;return true)",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection']",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})\"",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}^",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'|",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'[",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'{",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})]",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}}",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})\"",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'{",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto$",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})*",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": {}}|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}[",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}\"",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}:",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": \"}, {\"isAdmin\": true}]})",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}}",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": $}}:",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});]",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27(",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }};",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})[",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})^",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}})",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}(",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}[",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27;",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1']",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();(",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto\"",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']});",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}})",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}{",
    "label": 0
  },
  {
    "text": "|| sleep(5)=",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})]",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}*",
    "label": 0
  },
  {
    "text": "0;return true\"",
    "label": 1
  },
  {
    "text": "|| 1==1)",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});:",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password''",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}[",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}]",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a)",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection';",
    "label": 1
  },
  {
    "text": "|| sleep(5)*",
    "label": 1
  },
  {
    "text": "|| 1==1=",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "|| 1==1[",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": ;}}|",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']}))",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}*",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();{",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}\"",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a^",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'{",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1[",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a$",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "|| 1==1[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "0;return true}",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}}",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500*",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}*",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']})",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}*",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}):",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}|",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);'",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}=",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)=",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']});",
    "label": 0
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"user\": \", \"password\": \"}[",
    "label": 0
  },
  {
    "text": "|| sleep(5)}",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'{",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();{",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}^",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})$",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1''",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": ;}}'",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});}",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})'",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});)",
    "label": 1
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);(",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1*",
    "label": 1
  },
  {
    "text": "{}(",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();]",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345';",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1';",
    "label": 1
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});)",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}(",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": =}}[",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}[",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a$",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1]",
    "label": 1
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1':",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})(",
    "label": 0
  },
  {
    "text": "{\"user\": {, \"password\": {}|",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}^",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "';sleep(5000);'",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}|",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}$",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}}))",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);(",
    "label": 1
  },
  {
    "text": "{}*",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}^",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}{",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1(",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();(",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ;}}}",
    "label": 1
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1]",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1*",
    "label": 1
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "|| 1==1*",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}|",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'$",
    "label": 1
  },
  {
    "text": "0;return true[",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}'",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1']",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27|",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}\"",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "|| sleep(5)\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": $, \"password\": $}{",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}{",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500}",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}]",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": ]}}|",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});*",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto*",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();]",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}*",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'}",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}};",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}:",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}'",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a;",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"};",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);^",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1]",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'*",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})]",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''|",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}=",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});[",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27\"",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);(",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})^",
    "label": 0
  },
  {
    "text": "|| 1==1;",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)}",
    "label": 1
  },
  {
    "text": "0;return true;",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']}))",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']}):",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});;",
    "label": 1
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});\"",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}|",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019}",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "0;return true}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": =}}^",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}(",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "0;return true[",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}{",
    "label": 1
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}{",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}{",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto[",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();}",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}(",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345':",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection')",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})[",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})'",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}]",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}}",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}]",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})*",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}*",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1\"",
    "label": 1
  },
  {
    "text": "|| 1==1*",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'(",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019;",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}(",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1\"",
    "label": 1
  },
  {
    "text": "|| sleep(5)(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": ;}}{",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}})",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}$",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "|| sleep(5))",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})=",
    "label": 0
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "{\"user\": =, \"password\": =}*",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "|| sleep(5)[",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "|| 1==1;",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}=",
    "label": 0
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1\"",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}}",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": ]}, {\"isAdmin\": true}]}:",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27*",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);)",
    "label": 1
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}:",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "{}|",
    "label": 0
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "|| 1==1}",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ]}}$",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}};",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});'",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto^",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '']",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']});",
    "label": 0
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": =}};",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']}){",
    "label": 0
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "{\"user\": =, \"password\": =})",
    "label": 0
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a|",
    "label": 1
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}[",
    "label": 0
  },
  {
    "text": "|| sleep(5)}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}$",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ^}}(",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}$",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}=",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019|",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"})",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "';sleep(5000);'",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}=",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})\"",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'^",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a}",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}[",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}*",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}'",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1*",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500=",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}$",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500$",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}]",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "|| 1==1\"",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})^",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a$",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}'",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1)",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": )}, {\"isAdmin\": true}]}^",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}$",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}[",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27}",
    "label": 1
  },
  {
    "text": "0;return true:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}(",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)]",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'$",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})[",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}^",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "0;return true{",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}}",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000))",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ]}}:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": :}, {\"isAdmin\": true}]})",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '''",
    "label": 0
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1}",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}|",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}$",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto}",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'(",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1')",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});^",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "|| sleep(5)\"",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000))",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}[",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}^",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500:",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345':",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}{",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}*",
    "label": 1
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27]",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}(",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();)",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}=",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}|",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1':",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'*",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1;",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)*",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}});",
    "label": 1
  },
  {
    "text": "|| 1==1}",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection']",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": {}, {\"isAdmin\": true}]}*",
    "label": 1
  },
  {
    "text": "|| sleep(5)=",
    "label": 1
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}{",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto|",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}^",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}*",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection';",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']}):",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}:",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27]",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}|",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": }}}}",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}=",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}[",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'$",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "0;return true:",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "0;return true=",
    "label": 1
  },
  {
    "text": "|| 1==1)",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)]",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": (}}\"",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}:",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'\"",
    "label": 1
  },
  {
    "text": "{\"user\": {, \"password\": {}|",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": (}}[",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);}",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}[",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();'",
    "label": 1
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500$",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});|",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27{",
    "label": 1
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019|",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "0;return true'",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone']",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'}",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'|",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}\"",
    "label": 0
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}*",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}})",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}*",
    "label": 0
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27*",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto{",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'=",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);}",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto]",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'[",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": *}}*",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "{\"user\": }, \"password\": }}=",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})\"",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019$",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1^",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);'",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}:",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);^",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto^",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});|",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": {}}^",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1}",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'(",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})$",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019:",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);'",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});'",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}*",
    "label": 0
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": =}}}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'^",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})^",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();^",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto(",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});)",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": '}, {\"isAdmin\": true}]}{",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27[",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})'",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}$",
    "label": 0
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{};",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}|",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27}",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}*",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000))",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto'",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone';",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "|| sleep(5)*",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019'",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();=",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})=",
    "label": 1
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27;",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto*",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1]",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "0;return true)",
    "label": 1
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "|| sleep(5))",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}^",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1]",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']};",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password''",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'[",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)[",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '''",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": =}}'",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": }}}\"",
    "label": 1
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27|",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}*",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}]",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "{\"user\": ^, \"password\": ^}*",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000):",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019*",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']}){",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1=",
    "label": 1
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone''",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1=",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'(",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500|",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});)",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}*",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019:",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}|",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}=",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}|",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"}}=",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}^",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''(",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}=",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}:",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'{",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})|",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}(",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})}",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}:",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '')",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a[",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27)",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019|",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": |}, {\"isAdmin\": true}]}\"",
    "label": 1
  },
  {
    "text": "0;return true:",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "|| 1==1\"",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a:",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'^",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto;",
    "label": 1
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});\"",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}]",
    "label": 1
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}(",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}$",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}})",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''{",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}|",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'=",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone';",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}*",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']}))",
    "label": 0
  },
  {
    "text": "|| sleep(5)=",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto;",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)\"",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": '}}$",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}=",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}{",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"};",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}[",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection':",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})*",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}(",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password})",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''(",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000){",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "|| 1==1)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}(",
    "label": 0
  },
  {
    "text": "|| 1==1)",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000):",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}=",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''[",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}|",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}=",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}:",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']});",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}|",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}\"",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "|| sleep(5)[",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'$",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});;",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}}",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "|| 1==1$",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}:",
    "label": 0
  },
  {
    "text": "|| sleep(5)[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": |}}[",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'|",
    "label": 1
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);}",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();{",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}[",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'*",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}(",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password')",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "|| 1==1[",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}[",
    "label": 0
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "0;return true[",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'(",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});$",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}\"",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'{",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "0;return true;",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}=",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "{}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'^",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1\"",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a*",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']}){",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": (}})",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": {}}$",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});:",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": |}, {\"isAdmin\": true}]}[",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1'",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'|",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});)",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}=",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}|",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}]",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'\"",
    "label": 1
  },
  {
    "text": "$where: '1 == 1')",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto$",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'|",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)}",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});:",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'|",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}|",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1';",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}$",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}\"",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500$",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}))",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)*",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}};",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}{",
    "label": 0
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection']",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});'",
    "label": 1
  },
  {
    "text": "0;return true'",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}{",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);}",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}{",
    "label": 1
  },
  {
    "text": "';sleep(5000);'",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}=",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto=",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27{",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "|| 1==1)",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})'",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})]",
    "label": 0
  },
  {
    "text": "{}[",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": '}}{",
    "label": 1
  },
  {
    "text": "0;return true=",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''=",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)]",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1':",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();[",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})=",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)\"",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1)",
    "label": 1
  },
  {
    "text": "|| sleep(5))",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}=",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27^",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": *}, {\"isAdmin\": true}]}}",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});'",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "|| sleep(5))",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}|",
    "label": 0
  },
  {
    "text": "|| sleep(5){",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "{\"user\": |, \"password\": |}(",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}:",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": '}}\"",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}[",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'*",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "|| 1==1*",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']}))",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}'",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}^",
    "label": 1
  },
  {
    "text": "{\"user\": $, \"password\": $}'",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();(",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}{",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']}))",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}\"",
    "label": 0
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500}",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1=",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}\"",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})=",
    "label": 1
  },
  {
    "text": "0;return true*",
    "label": 1
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'\"",
    "label": 0
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1':",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();)",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": *}}'",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection';",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}^",
    "label": 0
  },
  {
    "text": "|| 1==1}",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})]",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}(",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto$",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);^",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'$",
    "label": 1
  },
  {
    "text": "|| 1==1[",
    "label": 1
  },
  {
    "text": "|| sleep(5)[",
    "label": 1
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();^",
    "label": 1
  },
  {
    "text": "|| sleep(5)\"",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});)",
    "label": 1
  },
  {
    "text": "|| 1==1)",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'$",
    "label": 1
  },
  {
    "text": "|| 1==1]",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": }}}*",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "|| sleep(5)[",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});'",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}|",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});]",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}=",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019;",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})[",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}\"",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}|",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": [}}:",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000){",
    "label": 1
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "|| 1==1^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}]",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'{",
    "label": 0
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500(",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"};",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']};",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})=",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);}",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}{",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}[",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}(",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}[",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);;",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}|",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}$",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();'",
    "label": 1
  },
  {
    "text": "|| 1==1[",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "{}*",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}'",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})\"",
    "label": 0
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019^",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'}",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}\"",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)}",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']});",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}]",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": $}}$",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}(",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": }}}]",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']}))",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}(",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": $}, {\"isAdmin\": true}]}'",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a'",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}\"",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "$where: '1 == 1';",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}=",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": |}}^",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "0;return true'",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto*",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27=",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}=",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "{}\"",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}]",
    "label": 0
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'(",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345')",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}(",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'(",
    "label": 0
  },
  {
    "text": "0;return true}",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": }}};",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'(",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'}",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}[",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}*",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ^}}}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'=",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}*",
    "label": 0
  },
  {
    "text": "0;return true*",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500*",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500=",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}=",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'|",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}{",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": :}, {\"isAdmin\": true}]}]",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": ^}, {\"isAdmin\": true}]}:",
    "label": 1
  },
  {
    "text": "|| 1==1}",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}(",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a|",
    "label": 1
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}]",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto]",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}(",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1^",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})(",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": *}}:",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}|",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}*",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": '}, {\"isAdmin\": true}]}'",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}^",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "|| 1==1;",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ^}}'",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}}",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}*",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'{",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "|| 1==1)",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1*",
    "label": 1
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})^",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}{",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "|| sleep(5)[",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}]",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection')",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'*",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ^}}|",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1\"",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto*",
    "label": 1
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}[",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019}",
    "label": 1
  },
  {
    "text": "0;return true\"",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019'",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019:",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}\"",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}^",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}^",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019[",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1(",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}:",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();*",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1*",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']}))",
    "label": 0
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'|",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});;",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}$",
    "label": 0
  },
  {
    "text": "|| 1==1*",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500*",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "|| sleep(5){",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']}))",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}]",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}|",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})}",
    "label": 0
  },
  {
    "text": "0;return true:",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});)",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '')",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}=",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1')",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a[",
    "label": 1
  },
  {
    "text": "|| sleep(5)=",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}}",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}:",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}});",
    "label": 1
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone']",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}{",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})\"",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "|| sleep(5)}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": }}}\"",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});\"",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27]",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "|| 1==1\"",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}(",
    "label": 0
  },
  {
    "text": "|| 1==1$",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a\"",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1';",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019'",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}*",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}=",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password};",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}^",
    "label": 0
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();'",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});\"",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '']",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)'",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})(",
    "label": 1
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "|| sleep(5)[",
    "label": 1
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}|",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a(",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'|",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}|",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);'",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto|",
    "label": 1
  },
  {
    "text": "|| 1==1)",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);(",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}=",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto(",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});:",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}$",
    "label": 0
  },
  {
    "text": "0;return true{",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}'",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}=",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'*",
    "label": 1
  },
  {
    "text": "0;return true)",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500{",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27\"",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{}'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": {}}}",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019^",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}*",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'\"",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}:",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27|",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}[",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();|",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto\"",
    "label": 1
  },
  {
    "text": "';sleep(5000);'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}{",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'|",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}]",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}]",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}=",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1(",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}(",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})^",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}|",
    "label": 0
  },
  {
    "text": "{\"user\": ], \"password\": ]}=",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}}",
    "label": 1
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});\"",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone''",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}*",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']}){",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})(",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'*",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}:",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});]",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'[",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{\"user\": {, \"password\": {})",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});)",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();'",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}=",
    "label": 0
  },
  {
    "text": "|| sleep(5)'",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}:",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto$",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}:",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a)",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27(",
    "label": 1
  },
  {
    "text": "0;return true\"",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": :}}}",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}'",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})*",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}$",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})=",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}$",
    "label": 0
  },
  {
    "text": "{\"user\": ;, \"password\": ;}]",
    "label": 0
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}\"",
    "label": 0
  },
  {
    "text": "|| 1==1=",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});$",
    "label": 1
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "0;return true*",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019;",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345''",
    "label": 0
  },
  {
    "text": "{\"user\": :, \"password\": :};",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": =}, {\"isAdmin\": true}]}{",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": }}}[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}$",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'{",
    "label": 0
  },
  {
    "text": "0;return true[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}[",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)[",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}^",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}(",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a*",
    "label": 1
  },
  {
    "text": "|| 1==1'",
    "label": 1
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}};",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "{\"user\": [, \"password\": [}*",
    "label": 0
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "|| 1==1)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}};",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "|| sleep(5))",
    "label": 1
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": $}}:",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});(",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});*",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}$",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'|",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}=",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1[",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})]",
    "label": 0
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'$",
    "label": 1
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": |}}(",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}=",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": $}}:",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27$",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1=",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})[",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}\"",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});|",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}});",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();=",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}|",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": [}}|",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": :}, {\"isAdmin\": true}]}\"",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a:",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1''",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'{",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1';",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}{",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}=",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}'",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);}",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}^",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});$",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "0;return true\"",
    "label": 1
  },
  {
    "text": "|| sleep(5)=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": ^}, {\"isAdmin\": true}]}^",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})}",
    "label": 0
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}*",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});\"",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "|| sleep(5)*",
    "label": 1
  },
  {
    "text": "{}[",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"})",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": '}}]",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection')",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})*",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();{",
    "label": 1
  },
  {
    "text": "|| 1==1^",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}|",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "|| sleep(5)|",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);'",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}|",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500}",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();{",
    "label": 1
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'(",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})=",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019)",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();|",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})'",
    "label": 0
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();[",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019(",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}=",
    "label": 1
  },
  {
    "text": "|| sleep(5);",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "0;return true;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}:",
    "label": 0
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})*",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}\"",
    "label": 1
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});^",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})'",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}))",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}:",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});}",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}]",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})[",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}[",
    "label": 0
  },
  {
    "text": "|| 1==1$",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']}){",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});:",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'^",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}'",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": :}, {\"isAdmin\": true}]}\"",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}^",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1$",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}:",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})*",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27$",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})'",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "$where: '1 == 1';",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}};",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']}):",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto}",
    "label": 1
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'^",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})\"",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})\"",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto]",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}=",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto(",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}*",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)=",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27:",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "|| sleep(5)=",
    "label": 1
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a(",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto:",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1\"",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}]",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}\"",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1'",
    "label": 1
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500]",
    "label": 1
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1^",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500=",
    "label": 1
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a:",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1;",
    "label": 1
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"};",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1']",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": =}})",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1':",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "$where: '1 == 1')",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})^",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'|",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}(",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1']",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1$",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}[",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}\"",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}{",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto[",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}|",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "0;return true*",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'|",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}}",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500)",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'$",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}]",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto|",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})\"",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500;",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email';",
    "label": 0
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone')",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}=",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": ;}}=",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": }}, {\"isAdmin\": true}]}'",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": $}}]",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)[",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});\"",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();\"",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27(",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'*",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})^",
    "label": 1
  },
  {
    "text": "0;return true\"",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1';",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": {}}]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}$",
    "label": 0
  },
  {
    "text": "|| sleep(5)|",
    "label": 1
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)\"",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})^",
    "label": 0
  },
  {
    "text": "|| sleep(5)=",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}*",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}=",
    "label": 1
  },
  {
    "text": "|| sleep(5)}",
    "label": 1
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}$",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'\"",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "0;return true[",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "|| 1==1=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();|",
    "label": 1
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": :}}\"",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password']",
    "label": 0
  },
  {
    "text": "{\"user\": $, \"password\": $}\"",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})[",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}})",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}[",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}\"",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1';",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'{",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a;",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}(",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}]",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}^",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "$where: '1 == 1']",
    "label": 1
  },
  {
    "text": "|| sleep(5)}",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": \"}, {\"isAdmin\": true}]}^",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})]",
    "label": 0
  },
  {
    "text": "{\"user\": |, \"password\": |}{",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}|",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "$where: '1 == 1''",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'\"",
    "label": 0
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": }}}=",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})\"",
    "label": 0
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection')",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1':",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}^",
    "label": 0
  },
  {
    "text": "0;return true}",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500*",
    "label": 1
  },
  {
    "text": "0;return true[",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1\"",
    "label": 1
  },
  {
    "text": "|| 1==1:",
    "label": 1
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"})",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto[",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}*",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}{",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}{",
    "label": 1
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'^",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}*",
    "label": 0
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "{\"user\": \", \"password\": \"}[",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})^",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});$",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1;",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}\"",
    "label": 0
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();'",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}[",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}(",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}=",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})}",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500[",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019*",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})(",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "';sleep(5000);'",
    "label": 1
  },
  {
    "text": "|| 1==1*",
    "label": 1
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})\"",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'[",
    "label": 1
  },
  {
    "text": "|| 1==1*",
    "label": 1
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}=",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']}):",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": )}}\"",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1':",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}[",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1';",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}};",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "|| sleep(5)|",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}[",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}|",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});]",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"})",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}=",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}=",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"};",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}{",
    "label": 0
  },
  {
    "text": "|| sleep(5))",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": :}, {\"isAdmin\": true}]}^",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27*",
    "label": 1
  },
  {
    "text": "$where: '1 == 1')",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500}",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}[",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}^",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1\"",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}|",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": }}, {\"isAdmin\": true}]}[",
    "label": 1
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": |}}[",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email';",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);}",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}$",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})=",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}=",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500}",
    "label": 1
  },
  {
    "text": "{\"user\": :, \"password\": :}{",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": $}})",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})|",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1=",
    "label": 1
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ;}}\"",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);)",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1';",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'*",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}*",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}|",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1}",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'^",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": )}, {\"isAdmin\": true}]}[",
    "label": 1
  },
  {
    "text": "0;return true=",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'|",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}:",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}:",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'$",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1\"",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password';",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}\"",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"};",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass})",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": *}}}",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a)",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}};",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}(",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}\"",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'=",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1:",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}'",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}}",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}*",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'(",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection')",
    "label": 1
  },
  {
    "text": "|| sleep(5){",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1[",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}:",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "0;return true:",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection']",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'^",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": ]}}*",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}{",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});(",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019;",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27:",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}^",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}]",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27\"",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}=",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)\"",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "|| sleep(5)|",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1)",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'[",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''$",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'|",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1'",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)*",
    "label": 1
  },
  {
    "text": "{}:",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}}",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '''",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"};",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "|| 1==1$",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "{\"user\": |, \"password\": |}^",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''$",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}=",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}*",
    "label": 0
  },
  {
    "text": "{}:",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1;",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}};",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "|| sleep(5)\"",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a|",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})|",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1')",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}]",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})*",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email':",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}});",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}}",
    "label": 0
  },
  {
    "text": "|| sleep(5)'",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": [}, {\"isAdmin\": true}]}$",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27:",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}:",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": ^}, {\"isAdmin\": true}]}\"",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a*",
    "label": 1
  },
  {
    "text": "|| sleep(5){",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email':",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019}",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}^",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)[",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}$",
    "label": 0
  },
  {
    "text": "|| sleep(5)=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}|",
    "label": 0
  },
  {
    "text": "$where: '1 == 1')",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection')",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1[",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'|",
    "label": 1
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}]",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": '}, {\"isAdmin\": true}]}(",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": (}}'",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection')",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a;",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})}",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a{",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})\"",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})'",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}'",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}[",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'}",
    "label": 1
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}]",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}[",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});(",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'{",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}};",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}[",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})|",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": :}, {\"isAdmin\": true}]};",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"})",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}{",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});(",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']};",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'|",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "|| sleep(5)[",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}=",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a:",
    "label": 1
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();^",
    "label": 1
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}})",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": }}}:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "|| 1==1[",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019]",
    "label": 1
  },
  {
    "text": "0;return true=",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "|| sleep(5)(",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);^",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}{",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "|| 1==1^",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''*",
    "label": 0
  },
  {
    "text": "|| 1==1$",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"};",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000))",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}=",
    "label": 0
  },
  {
    "text": "{\"user\": ^, \"password\": ^}\"",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "0;return true{",
    "label": 1
  },
  {
    "text": "0;return true*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})$",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}\"",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'=",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'*",
    "label": 0
  },
  {
    "text": "|| sleep(5))",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});]",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "|| sleep(5)(",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}$",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}\"",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email')",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}|",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": )}}'",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}*",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a*",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "0;return true;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}|",
    "label": 1
  },
  {
    "text": "{}(",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});\"",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019'",
    "label": 1
  },
  {
    "text": "0;return true'",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "{\"user\": ), \"password\": )}{",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}]",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});(",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});*",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);'",
    "label": 1
  },
  {
    "text": "|| 1==1[",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}=",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})=",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1:",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27[",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'^",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'$",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1;",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "|| 1==1=",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "{\"user\": :, \"password\": :}=",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'=",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'(",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}})",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": =}})",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}|",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}{",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019)",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "|| 1==1$",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}}",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})=",
    "label": 0
  },
  {
    "text": "0;return true=",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}^",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})]",
    "label": 0
  },
  {
    "text": "|| sleep(5)}",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});^",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();{",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500)",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a$",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']}):",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '')",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}'",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();}",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": }}, {\"isAdmin\": true}]}[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": =}}(",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'=",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}[",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "|| 1==1)",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})}",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password';",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto:",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}(",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}=",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1\"",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}*",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)[",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500{",
    "label": 1
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": :}}*",
    "label": 1
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);)",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}^",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})|",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1'",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}*",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''$",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}(",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": [}, {\"isAdmin\": true}]}'",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019\"",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});(",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);^",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{};",
    "label": 0
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": :}}$",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1';",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": =}, {\"isAdmin\": true}]})",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})=",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});$",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}{",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}^",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019^",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "|| sleep(5)|",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500{",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": }}}=",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}=",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});*",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}}",
    "label": 1
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}*",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}=",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1:",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "0;return true}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "0;return true)",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});|",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})^",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": '}}|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}*",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "|| 1==1$",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto|",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})\"",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}[",
    "label": 0
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}:",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'(",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}\"",
    "label": 0
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}}",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a=",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'{",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27;",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});^",
    "label": 1
  },
  {
    "text": "0;return true\"",
    "label": 1
  },
  {
    "text": "{}'",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}})",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})$",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27|",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}]",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1}",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});:",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();:",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}^",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto'",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})|",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": :}}[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}[",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']}):",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}:",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']})",
    "label": 0
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});|",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1;",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1}",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}\"",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a{",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}[",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto{",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}};",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}]",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'|",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}:",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}:",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500$",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});|",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}|",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "0;return true{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": )}, {\"isAdmin\": true}]}(",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}=",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});[",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'\"",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "|| 1==1]",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'{",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": :}, {\"isAdmin\": true}]}|",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})(",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'(",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": ^}, {\"isAdmin\": true}]}\"",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}*",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"};",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}(",
    "label": 0
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'|",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"};",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'{",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}\"",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": :}}'",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})(",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();]",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}^",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'|",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}:",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}]",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}:",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27$",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})(",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": $}}'",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "|| 1==1=",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}[",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}:",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'|",
    "label": 1
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "|| 1==1]",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}\"",
    "label": 1
  },
  {
    "text": "{}$",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'*",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "';sleep(5000);'",
    "label": 1
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'{",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}|",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();\"",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto}",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}*",
    "label": 1
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "|| 1==1)",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}\"",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27[",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto=",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();$",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019=",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "|| sleep(5)|",
    "label": 1
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1*",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})$",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}]",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1:",
    "label": 1
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}})",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "{})",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}'",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}]",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}$",
    "label": 0
  },
  {
    "text": "|| 1==1}",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": *}, {\"isAdmin\": true}]}*",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}=",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})*",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection':",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}}",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']}){",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}[",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})^",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'\"",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a]",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}^",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}]",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}\"",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }})",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})=",
    "label": 0
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);;",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": :}, {\"isAdmin\": true}]}:",
    "label": 1
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000){",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019\"",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}$",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'{",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});]",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto(",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}^",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}(",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}\"",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019|",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}[",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'\"",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1{",
    "label": 1
  },
  {
    "text": "|| 1==1}",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a=",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}{",
    "label": 1
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})|",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}\"",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}]",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}[",
    "label": 1
  },
  {
    "text": "0;return true[",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'|",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}]",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}^",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}{",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}=",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}^",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']}){",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1''",
    "label": 1
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": *}, {\"isAdmin\": true}]}[",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'{",
    "label": 0
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}=",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});;",
    "label": 1
  },
  {
    "text": "|| 1==1=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": |}})",
    "label": 1
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});(",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": *}, {\"isAdmin\": true}]}*",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']});",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});;",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1']",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": (}}:",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}})",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '''",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''(",
    "label": 0
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ;}}[",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto)",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})}",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000){",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019{",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1[",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto}",
    "label": 1
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']}))",
    "label": 0
  },
  {
    "text": "|| sleep(5)[",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})'",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27[",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}*",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}^",
    "label": 1
  },
  {
    "text": "{}|",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}*",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})\"",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "0;return true}",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27]",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}(",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}})",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email''",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": =}}:",
    "label": 1
  },
  {
    "text": "|| sleep(5);",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": [}}(",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)(",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}(",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'{",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}*",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019[",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}*",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}|",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}|",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27\"",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);;",
    "label": 1
  },
  {
    "text": "|| sleep(5)[",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']};",
    "label": 0
  },
  {
    "text": "{\"user\": |, \"password\": |}]",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500=",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}})",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}};",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']};",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1';",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500'",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();;",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}[",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}\"",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "{\"user\": ', \"password\": '}[",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": ]}, {\"isAdmin\": true}]}=",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}};",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);(",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});}",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto]",
    "label": 1
  },
  {
    "text": "|| sleep(5)*",
    "label": 1
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": (}, {\"isAdmin\": true}]})",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1;",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});;",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "$where: '1 == 1']",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}\"",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''|",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": ^}}^",
    "label": 1
  },
  {
    "text": "|| sleep(5)\"",
    "label": 1
  },
  {
    "text": "0;return true:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}}",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}=",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}}",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a'",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}\"",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}\"",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}[",
    "label": 0
  },
  {
    "text": "0;return true:",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "$where: '1 == 1''",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto}",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)]",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1{",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();=",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": \"}, {\"isAdmin\": true}]}'",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "0;return true}",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}=",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();=",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "0;return true[",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27*",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": '}}]",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}){",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": )}}(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1';",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)*",
    "label": 1
  },
  {
    "text": "0;return true;",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);;",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000):",
    "label": 1
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}=",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);'",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a[",
    "label": 1
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}$",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1}",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "{\"user\": $, \"password\": $})",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'$",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a=",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1';",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500;",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)|",
    "label": 1
  },
  {
    "text": "|| 1==1^",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto[",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}))",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000):",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}|",
    "label": 0
  },
  {
    "text": "$where: '1 == 1':",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'(",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})=",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}{",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "|| 1==1$",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'{",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''^",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1^",
    "label": 1
  },
  {
    "text": "|| 1==1:",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{}(",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1':",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}'",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019|",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}]",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500:",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})]",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})\"",
    "label": 1
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345']",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'=",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1';",
    "label": 1
  },
  {
    "text": "$where: '1 == 1')",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'$",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});\"",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto{",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'{",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass})",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}:",
    "label": 0
  },
  {
    "text": "|| 1==1$",
    "label": 1
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}(",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": {}}'",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019=",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}$",
    "label": 0
  },
  {
    "text": "|| sleep(5)*",
    "label": 1
  },
  {
    "text": "0;return true}",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}){",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}^",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto=",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}'",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1']",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}[",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();*",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "|| 1==1=",
    "label": 1
  },
  {
    "text": "{}^",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "|| sleep(5)[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}=",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}$",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']}):",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'$",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a;",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "|| sleep(5)'",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27:",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();{",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1'",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}]",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27\"",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();(",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}^",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a)",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'|",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'=",
    "label": 1
  },
  {
    "text": "|| 1==1\"",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a*",
    "label": 1
  },
  {
    "text": "{}(",
    "label": 0
  },
  {
    "text": "0;return true{",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'(",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}(",
    "label": 0
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'}",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a\"",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}=",
    "label": 1
  },
  {
    "text": "0;return true\"",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": [}}\"",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a)",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}}",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}=",
    "label": 1
  },
  {
    "text": "{}=",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}:",
    "label": 0
  },
  {
    "text": "{}\"",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}'",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27$",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}=",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}\"",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']}){",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto;",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}'",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1(",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}\"",
    "label": 1
  },
  {
    "text": "0;return true[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}{",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000};",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500\"",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"})",
    "label": 1
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']}){",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27;",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}\"",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000))",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}});",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": ;}}\"",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})|",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'\"",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019:",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}\"",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"})",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}(",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto|",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}'",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}|",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500:",
    "label": 1
  },
  {
    "text": "|| sleep(5){",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}|",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});^",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}}",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'[",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}'",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto[",
    "label": 1
  },
  {
    "text": "|| sleep(5))",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}})",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}$",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}=",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})^",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto=",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500]",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}:",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27;",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": [}, {\"isAdmin\": true}]}|",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']}){",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}:",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a'",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019$",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection']",
    "label": 1
  },
  {
    "text": "|| sleep(5)(",
    "label": 1
  },
  {
    "text": "|| 1==1:",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'*",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "|| 1==1}",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'$",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});\"",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": {}}:",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto$",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']});",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password']",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"}}$",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}*",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();{",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1]",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();'",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']});",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"};",
    "label": 0
  },
  {
    "text": "{};",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})=",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"}};",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)}",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}(",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1']",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto(",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}\"",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": '}}[",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'*",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}:",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}});",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto|",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019}",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}*",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}]",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'=",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});*",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500\"",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']}){",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1']",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}\"",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}}",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}=",
    "label": 0
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "$where: '1 == 1':",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "|| 1==1)",
    "label": 1
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000);",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}|",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})^",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}});",
    "label": 0
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})[",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password')",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});}",
    "label": 1
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "{\"user\": ), \"password\": )}\"",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})]",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']}))",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})=",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": ^}, {\"isAdmin\": true}]}[",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}|",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a\"",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})\"",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}*",
    "label": 1
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "|| 1==1'",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});|",
    "label": 1
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'$",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();)",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass};",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'{",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})(",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500(",
    "label": 1
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": =}})",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}=",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}*",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})(",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": }}, {\"isAdmin\": true}]}:",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"})",
    "label": 0
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "0;return true*",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1':",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'\"",
    "label": 1
  },
  {
    "text": "$where: '1 == 1''",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": \"}, {\"isAdmin\": true}]};",
    "label": 1
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();'",
    "label": 1
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}(",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019'",
    "label": 1
  },
  {
    "text": "0;return true}",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"}}'",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'*",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": )}}^",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}]",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);(",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}=",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}[",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})|",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}(",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1]",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": \"}, {\"isAdmin\": true}]};",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}*",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}[",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "|| 1==1;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}]",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}|",
    "label": 0
  },
  {
    "text": "|| sleep(5);",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}*",
    "label": 0
  },
  {
    "text": "|| 1==1:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}^",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000))",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'\"",
    "label": 0
  },
  {
    "text": "{}]",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto'",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}$",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})\"",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)(",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": [}, {\"isAdmin\": true}]}}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'|",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}\"",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)'",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": =}}:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}$",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}[",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}^",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1';",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email';",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}:",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}'",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}|",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});}",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});)",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''[",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}*",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}{",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a*",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "|| 1==1;",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto[",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'(",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}}",
    "label": 0
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone')",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}|",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}=",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}(",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}=",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27:",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})*",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "$where: '1 == 1')",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}\"",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}*",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "0;return true*",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}^",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})=",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}$",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto'",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a(",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": ]}}\"",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}]",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27(",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'}",
    "label": 1
  },
  {
    "text": "{\"user\": $, \"password\": $}*",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": =}, {\"isAdmin\": true}]})",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)]",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1{",
    "label": 1
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": |}}'",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)[",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": (}}^",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345':",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}}",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}|",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '']",
    "label": 0
  },
  {
    "text": "|| sleep(5)(",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}=",
    "label": 0
  },
  {
    "text": "|| 1==1}",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27'",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1*",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})]",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019\"",
    "label": 1
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "';sleep(5000);'",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a[",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}{",
    "label": 1
  },
  {
    "text": "0;return true:",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500:",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}*",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}}",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}(",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}]",
    "label": 1
  },
  {
    "text": "0;return true}",
    "label": 1
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1''",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);)",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": ;}, {\"isAdmin\": true}]}$",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password};",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}^",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto]",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto;",
    "label": 1
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "|| sleep(5){",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto)",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a$",
    "label": 1
  },
  {
    "text": "0;return true)",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1=",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1\"",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});:",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'}",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}}",
    "label": 1
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})|",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": [}}|",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a}",
    "label": 1
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);'",
    "label": 1
  },
  {
    "text": "{\"user\": ', \"password\": '}|",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "0;return true;",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto\"",
    "label": 1
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}]",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": *}}*",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}^",
    "label": 0
  },
  {
    "text": "|| 1==1;",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": (}, {\"isAdmin\": true}]}\"",
    "label": 1
  },
  {
    "text": "|| sleep(5)|",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);)",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}(",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}{",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email']",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1'",
    "label": 1
  },
  {
    "text": "|| 1==1]",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}}",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});;",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1|",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}(",
    "label": 0
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019\"",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}=",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}|",
    "label": 1
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''[",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});\"",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500)",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}});",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": $}})",
    "label": 1
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})]",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '''",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})'",
    "label": 0
  },
  {
    "text": "|| sleep(5)=",
    "label": 1
  },
  {
    "text": "|| sleep(5)=",
    "label": 1
  },
  {
    "text": "|| 1==1[",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500=",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}\"",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)]",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"};",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);^",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''{",
    "label": 0
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})*",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password})",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}=",
    "label": 1
  },
  {
    "text": "|| sleep(5)*",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});'",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''{",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']}):",
    "label": 0
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});(",
    "label": 1
  },
  {
    "text": "|| sleep(5))",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}=",
    "label": 1
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "|| sleep(5);",
    "label": 1
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}[",
    "label": 0
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}*",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000);",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019]",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}{",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": =}}\"",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}(",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'(",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "0;return true[",
    "label": 1
  },
  {
    "text": "|| 1==1\"",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}^",
    "label": 0
  },
  {
    "text": "|| 1==1^",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ;}}'",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}]",
    "label": 0
  },
  {
    "text": "|| sleep(5)\"",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a)",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'^",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}{",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}^",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "0;return true=",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}]",
    "label": 0
  },
  {
    "text": "{}[",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000);",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})(",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}\"",
    "label": 1
  },
  {
    "text": "|| sleep(5)|",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'$",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}{",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}$",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}};",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": [}};",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": :}})",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1':",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'$",
    "label": 0
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}]",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}*",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27)",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500$",
    "label": 1
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}|",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'=",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}]",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}\"",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019\"",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});}",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto;",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'^",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})(",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})*",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500'",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone';",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})]",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019$",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500;",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();*",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": )}, {\"isAdmin\": true}]}^",
    "label": 1
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'|",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": *}, {\"isAdmin\": true}]}*",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019'",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "|| 1==1\"",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500*",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}[",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{}[",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1^",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})",
    "label": 1
  },
  {
    "text": "0;return true:",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']})",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}\"",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});;",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": ;}}[",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}:",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": |}}{",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1''",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}[",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'=",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'|",
    "label": 1
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345''",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": )}}:",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'*",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}))",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}*",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'|",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'*",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection';",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}$",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}=",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'|",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}{",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})*",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'}",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "|| sleep(5)'",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}(",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": )}, {\"isAdmin\": true}]}[",
    "label": 1
  },
  {
    "text": "{}^",
    "label": 0
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}{",
    "label": 0
  },
  {
    "text": "|| 1==1*",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email']",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": *}, {\"isAdmin\": true}]})",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto=",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "|| sleep(5)|",
    "label": 1
  },
  {
    "text": "{}(",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'$",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a*",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']};",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}^",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27$",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27$",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "|| 1==1\"",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}]",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})\"",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}(",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})\"",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27(",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}=",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1']",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1|",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": *}, {\"isAdmin\": true}]}{",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000):",
    "label": 1
  },
  {
    "text": "|| 1==1}",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}^",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}^",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto=",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}^",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}:",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}$",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1']",
    "label": 1
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})=",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);(",
    "label": 1
  },
  {
    "text": "$where: '1 == 1';",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})]",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "|| sleep(5))",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1*",
    "label": 1
  },
  {
    "text": "|| 1==1)",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']}){",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}(",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": ]}, {\"isAdmin\": true}]}[",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a:",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}]",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)\"",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}\"",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": }}}]",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection':",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'(",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}=",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1;",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500^",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}*",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();(",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});*",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": |}}[",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}(",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}|",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019=",
    "label": 1
  },
  {
    "text": "|| 1==1:",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019^",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}:",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1|",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27=",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "|| 1==1;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}=",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}(",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();}",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"};",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a:",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''|",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'=",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": =}}*",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}]",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}]",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "|| 1==1^",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}};",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}(",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}^",
    "label": 1
  },
  {
    "text": "0;return true*",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'\"",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)[",
    "label": 1
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'|",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}[",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}=",
    "label": 0
  },
  {
    "text": "|| sleep(5)}",
    "label": 1
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": ;}}}",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000){",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}'",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1^",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1|",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);'",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}'",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1';",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});;",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "|| sleep(5))",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1';",
    "label": 1
  },
  {
    "text": "|| 1==1)",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": ]}}}",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{}{",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'^",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'\"",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}(",
    "label": 0
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}]",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1';",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}))",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();\"",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}^",
    "label": 0
  },
  {
    "text": "{}{",
    "label": 0
  },
  {
    "text": "{\"user\": ;, \"password\": ;}'",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'{",
    "label": 1
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": }}, {\"isAdmin\": true}]}*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}^",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1*",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}(",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''(",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});(",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}:",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})=",
    "label": 0
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "|| 1==1;",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})$",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a;",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"};",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": ;}, {\"isAdmin\": true}]}[",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']}))",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "0;return true}",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"};",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": ;}}'",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}]",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}=",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})=",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})$",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}{",
    "label": 0
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "0;return true'",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})'",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''=",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']}):",
    "label": 0
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1\"",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}^",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})$",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}\"",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}'",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}^",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}=",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'$",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});}",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();(",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019]",
    "label": 1
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"})",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});^",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']}){",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}]",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1:",
    "label": 1
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}\"",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'[",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}}){",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}$",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}=",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}*",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": }}}:",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}*",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "0;return true)",
    "label": 1
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "0;return true:",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"};",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});\"",
    "label": 1
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})'",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);}",
    "label": 1
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "|| 1==1'",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})[",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)[",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}:",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}]",
    "label": 1
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})^",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}=",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500'",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}'",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019;",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});*",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019^",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);^",
    "label": 1
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}*",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a=",
    "label": 1
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password']",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}'",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}{",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500*",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a}",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "0;return true}",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": \"}, {\"isAdmin\": true}]}]",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": )}, {\"isAdmin\": true}]}*",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}}",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}\"",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"}}|",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']}):",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": }}, {\"isAdmin\": true}]}(",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": ]}, {\"isAdmin\": true}]}$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'(",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}^",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']}):",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": (}}|",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019|",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})|",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}'",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019;",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": '}}{",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}}",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']});",
    "label": 0
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": (}})",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);(",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}]",
    "label": 1
  },
  {
    "text": "$where: '1 == 1';",
    "label": 1
  },
  {
    "text": "{}\"",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}{",
    "label": 0
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27^",
    "label": 1
  },
  {
    "text": "|| sleep(5)[",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection':",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'{",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})\"",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a]",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}*",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": =}, {\"isAdmin\": true}]}{",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}[",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']}):",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": [}, {\"isAdmin\": true}]}[",
    "label": 1
  },
  {
    "text": "|| sleep(5)*",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}'",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);'",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'$",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": (}};",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);^",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}]",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}(",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})}",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27;",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "|| sleep(5)=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'=",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": ^}}*",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});|",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "|| 1==1'",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}(",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}[",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection']",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});$",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''=",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "0;return true)",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": $}, {\"isAdmin\": true}]};",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone']",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'*",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "|| 1==1]",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"})",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": [}}[",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "{}=",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"}}(",
    "label": 1
  },
  {
    "text": "{\"user\": [, \"password\": [}^",
    "label": 0
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto*",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}:",
    "label": 0
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})$",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}(",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();(",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}]",
    "label": 0
  },
  {
    "text": "|| 1==1$",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27^",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'*",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})\"",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"})",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}*",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}=",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "|| 1==1]",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}*",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": =}}$",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1''",
    "label": 1
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})=",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1')",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email''",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}[",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();'",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1|",
    "label": 1
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1']",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']})",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": $}, {\"isAdmin\": true}]}}",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}[",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}{",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}^",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}^",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}{",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto'",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}=",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": ;}}*",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}$",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}[",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}:",
    "label": 0
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}=",
    "label": 0
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "|| 1==1*",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}]",
    "label": 0
  },
  {
    "text": "|| 1==1:",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'$",
    "label": 0
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ;}}\"",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '''",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1$",
    "label": 1
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email';",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}{",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();}",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection';",
    "label": 1
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}{",
    "label": 0
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500{",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500*",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1$",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'|",
    "label": 1
  },
  {
    "text": "|| sleep(5)|",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1':",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}:",
    "label": 0
  },
  {
    "text": "|| 1==1*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}*",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"})",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}(",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}\"",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "0;return true;",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27=",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "|| 1==1]",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}^",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1':",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}*",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'{",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});[",
    "label": 1
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a|",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345''",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": ;}};",
    "label": 1
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}'",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}}",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})=",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1*",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}$",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}^",
    "label": 0
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "{}*",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{};",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": |}}(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}$",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}[",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1[",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019'",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{}*",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"};",
    "label": 1
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "0;return true*",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}*",
    "label": 0
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a[",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'{",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27^",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": )}, {\"isAdmin\": true}]}=",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "{\"user\": ], \"password\": ]}{",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();*",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1(",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "|| 1==1}",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1]",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})|",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)]",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}'",
    "label": 1
  },
  {
    "text": "|| sleep(5)[",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})|",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})]",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1')",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)*",
    "label": 1
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": )}}'",
    "label": 1
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}))",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();[",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});}",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})[",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}:",
    "label": 1
  },
  {
    "text": "|| sleep(5)*",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});;",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500{",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)|",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'[",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a{",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}\"",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}=",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}{",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}^",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']});",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']}):",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto\"",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto[",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});[",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}:",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}{",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto[",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}]",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{}=",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "|| 1==1^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}})",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "|| 1==1\"",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": :}}$",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "0;return true;",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "$where: '1 == 1''",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": {}}[",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}*",
    "label": 1
  },
  {
    "text": "{};",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto;",
    "label": 1
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}{",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}(",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ]}}{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "|| sleep(5)'",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": [}};",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}(",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "{\"user\": ^, \"password\": ^}(",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'{",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a\"",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}{",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'$",
    "label": 1
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500]",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27{",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1']",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}\"",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)$",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)=",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}'",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "|| sleep(5)'",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{}^",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27$",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": '}}|",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();|",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}});",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})=",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}'",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": {}, {\"isAdmin\": true}]}|",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}|",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "$where: '1 == 1']",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "|| sleep(5)\"",
    "label": 1
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email')",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}'",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a=",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}^",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}}",
    "label": 0
  },
  {
    "text": "{}=",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();\"",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}[",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": )}}(",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}|",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}:",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": }}}[",
    "label": 1
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'|",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password};",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "';sleep(5000);'",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": )}}|",
    "label": 1
  },
  {
    "text": "{\"user\": ), \"password\": )}*",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019;",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'|",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();{",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']}):",
    "label": 0
  },
  {
    "text": "{\"user\": ), \"password\": )}(",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}[",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}{",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}:",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1'",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}};",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}]",
    "label": 1
  },
  {
    "text": "0;return true=",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password};",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}'",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}){",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "|| 1==1*",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});:",
    "label": 1
  },
  {
    "text": "{\"user\": ', \"password\": '}\"",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}{",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);'",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "|| 1==1'",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}[",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1]",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}}",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);}",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'\"",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27$",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a|",
    "label": 1
  },
  {
    "text": "{}{",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}\"",
    "label": 0
  },
  {
    "text": "0;return true)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": |}}[",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection';",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}*",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}=",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "$where: '1 == 1')",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}\"",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019)",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1{",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})[",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']};",
    "label": 0
  },
  {
    "text": "|| sleep(5)*",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})'",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}:",
    "label": 0
  },
  {
    "text": "|| sleep(5)}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})^",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto]",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}$",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}(",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})^",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}|",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019(",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": '}, {\"isAdmin\": true}]};",
    "label": 1
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}^",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'$",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": )}}'",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}[",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})$",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": }}}[",
    "label": 1
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'{",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();[",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a:",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}^",
    "label": 1
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}|",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'(",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}=",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}(",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a(",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})'",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": [}}|",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);;",
    "label": 1
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();:",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1';",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'$",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto]",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''(",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})*",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})'",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500]",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1']",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}:",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1)",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500=",
    "label": 1
  },
  {
    "text": "|| 1==1*",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'$",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": (}}[",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}[",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'\"",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500=",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}*",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}(",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}\"",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}};",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": ;}}^",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500:",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1|",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});[",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']}):",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "0;return true[",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}]",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'{",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27'",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}*",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}*",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}*",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1']",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "|| 1==1\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "|| 1==1=",
    "label": 1
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}'",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}})",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'*",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}{",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']}):",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}]",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}})",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500)",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}|",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": (}, {\"isAdmin\": true}]}^",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27(",
    "label": 1
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})\"",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'{",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});]",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}:",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})=",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}\"",
    "label": 1
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ]}}=",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}))",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a=",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''$",
    "label": 0
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a\"",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1':",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27:",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1:",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}\"",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a'",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});}",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'*",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}(",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}|",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}^",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": |}, {\"isAdmin\": true}]}$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)}",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}})",
    "label": 0
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": $}, {\"isAdmin\": true}]}|",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1':",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}=",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}(",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019{",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019}",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});$",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}\"",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a'",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}]",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": :}}}",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}{",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27\"",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})*",
    "label": 0
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019]",
    "label": 1
  },
  {
    "text": "|| 1==1)",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}'",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})=",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}|",
    "label": 0
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);(",
    "label": 1
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": (}}]",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})}",
    "label": 0
  },
  {
    "text": "{}'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})=",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});$",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();)",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']}))",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}]",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();[",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});}",
    "label": 1
  },
  {
    "text": "|| sleep(5)[",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "$where: '1 == 1';",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019*",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a[",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a^",
    "label": 1
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000);",
    "label": 1
  },
  {
    "text": "{\"user\": ^, \"password\": ^}(",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'[",
    "label": 0
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": '}}(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": |}}:",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1$",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}'",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": :}}^",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();)",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)^",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}[",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1']",
    "label": 1
  },
  {
    "text": "|| sleep(5)(",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'(",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']}))",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}};",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'*",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}=",
    "label": 1
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})'",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});]",
    "label": 1
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email''",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone':",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019}",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1')",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}=",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500=",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019\"",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}[",
    "label": 0
  },
  {
    "text": "|| 1==1)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500;",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto;",
    "label": 1
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1'",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}|",
    "label": 0
  },
  {
    "text": "|| 1==1]",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})[",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})*",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'\"",
    "label": 0
  },
  {
    "text": "|| 1==1\"",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})*",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}:",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": |}}[",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}'",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}=",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email';",
    "label": 0
  },
  {
    "text": "|| sleep(5)'",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}:",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1']",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": (}}$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}'",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}}",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});|",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}\"",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}(",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1:",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}^",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000){",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1}",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "|| 1==1]",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "0;return true;",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)*",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}:",
    "label": 0
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1;",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}^",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}*",
    "label": 0
  },
  {
    "text": "|| 1==1;",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})'",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}'",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}$",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})'",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone';",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto$",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);;",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email')",
    "label": 0
  },
  {
    "text": "{\"user\": }, \"password\": }}[",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019[",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'^",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345')",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1':",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}*",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": (}, {\"isAdmin\": true}]}}",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'}",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'^",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}(",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "0;return true;",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}=",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});)",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}]",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}|",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500*",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "|| sleep(5)(",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}}",
    "label": 0
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}{",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto(",
    "label": 1
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}]",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}$",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1^",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "|| sleep(5){",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']}){",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": ]}, {\"isAdmin\": true}]}*",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();^",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}[",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)'",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"})",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1:",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": $}, {\"isAdmin\": true}]})",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27:",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}(",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019'",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": |}}}",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});:",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1{",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '''",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'=",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto:",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})=",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}{",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "$where: '1 == 1':",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}^",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);^",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "|| 1==1$",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": {}, {\"isAdmin\": true}]}'",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}}){",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ;}}\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}\"",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27;",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});*",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019;",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection';",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27*",
    "label": 1
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}(",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);(",
    "label": 1
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}}",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}|",
    "label": 0
  },
  {
    "text": "|| sleep(5)}",
    "label": 1
  },
  {
    "text": "$where: '1 == 1']",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": ^}, {\"isAdmin\": true}]}\"",
    "label": 1
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'|",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']}):",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}$",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'^",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27[",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});^",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto}",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);;",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": ^}}|",
    "label": 1
  },
  {
    "text": "|| 1==1=",
    "label": 1
  },
  {
    "text": "0;return true'",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27*",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}[",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone''",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}:",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": :}}$",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "{\"user\": $, \"password\": $}]",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});(",
    "label": 1
  },
  {
    "text": "|| 1==1*",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019{",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'[",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'[",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019|",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}}):",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}=",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500[",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();$",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto^",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})[",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1]",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)*",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});'",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}{",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);;",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);^",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto:",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'$",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection':",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": [}, {\"isAdmin\": true}]})",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "|| sleep(5)|",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "|| 1==1;",
    "label": 1
  },
  {
    "text": "{}}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}(",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'$",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});=",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1\"",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "0;return true*",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});$",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})]",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}*",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500}",
    "label": 1
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": ;}}$",
    "label": 1
  },
  {
    "text": "0;return true}",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "|| sleep(5)*",
    "label": 1
  },
  {
    "text": "0;return true'",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})]",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}^",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'(",
    "label": 1
  },
  {
    "text": "0;return true'",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}]",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}(",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto}",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345']",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']}))",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": {}, {\"isAdmin\": true}]}[",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019{",
    "label": 1
  },
  {
    "text": "0;return true:",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}$",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1=",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}]",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}*",
    "label": 0
  },
  {
    "text": "|| 1==1\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}]",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']}){",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}^",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1'",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1]",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"user\": $, \"password\": $}}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})*",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}{",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27'",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": ]}}:",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}[",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}):",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}\"",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}$",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});;",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}[",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})(",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1']",
    "label": 1
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}):",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "|| 1==1'",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": =}, {\"isAdmin\": true}]};",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '':",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto'",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});*",
    "label": 1
  },
  {
    "text": "0;return true}",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}\"",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)$",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}]",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "|| sleep(5){",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "|| 1==1*",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}*",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}{",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500^",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": )}, {\"isAdmin\": true}]}]",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019^",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}{",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'^",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'$",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});'",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27[",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);^",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}\"",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}:",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})}",
    "label": 0
  },
  {
    "text": "|| sleep(5)*",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}^",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}{",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'^",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'*",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": |}}[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "|| sleep(5)'",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'(",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}|",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}]",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)$",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}:",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}):",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1]",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1=",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "|| sleep(5)*",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}*",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}[",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}*",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1^",
    "label": 1
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": '}, {\"isAdmin\": true}]}'",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}}):",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000);",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '']",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}}",
    "label": 0
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": \"}, {\"isAdmin\": true}]}=",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);(",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass})",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}))",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1$",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27*",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1:",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']}):",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}=",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1':",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}^",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);)",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}*",
    "label": 1
  },
  {
    "text": "0;return true;",
    "label": 1
  },
  {
    "text": "0;return true}",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}[",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();:",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}});",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": *}, {\"isAdmin\": true}]}=",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}'",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});;",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}(",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'(",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345';",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1$",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})[",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a=",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1'",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email''",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000){",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "|| sleep(5)|",
    "label": 1
  },
  {
    "text": "|| sleep(5);",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'{",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1':",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1';",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})(",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}]",
    "label": 0
  },
  {
    "text": "|| sleep(5)(",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}[",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}{",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});)",
    "label": 1
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}'",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}}",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}|",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}\"",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": ]}})",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}*",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "|| sleep(5))",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)=",
    "label": 1
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"};",
    "label": 1
  },
  {
    "text": "|| sleep(5)*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": {}}|",
    "label": 1
  },
  {
    "text": "';sleep(5000);'",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})*",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}$",
    "label": 0
  },
  {
    "text": "{}|",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})]",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": =}}|",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}$",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}\"",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'}",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'\"",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'(",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});*",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": \"}, {\"isAdmin\": true}]}*",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}};",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a:",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1']",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''^",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}'",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);)",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);]",
    "label": 1
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();$",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})^",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1':",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}=",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}=",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}[",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500^",
    "label": 1
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();$",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''|",
    "label": 0
  },
  {
    "text": "|| 1==1*",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'\"",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "$where: '1 == 1')",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}(",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"})",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})}",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']}):",
    "label": 0
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '']",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": ]}, {\"isAdmin\": true}]}=",
    "label": 1
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019*",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a*",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});(",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1]",
    "label": 1
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500)",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": )}}'",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}\"",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})(",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});)",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": (}, {\"isAdmin\": true}]}^",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})\"",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}^",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'[",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})$",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}'",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'=",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000):",
    "label": 1
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})(",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'^",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}\"",
    "label": 1
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'*",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'*",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})|",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"})",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});|",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})]",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": =}}}",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}[",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"};",
    "label": 1
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1=",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}}",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}(",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}=",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto}",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})}",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019{",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto:",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})]",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": )}}|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": '}}(",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}:",
    "label": 0
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}^",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection']",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}(",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}{",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto[",
    "label": 1
  },
  {
    "text": "|| 1==1}",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection''",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})\"",
    "label": 0
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500^",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "0;return true*",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}*",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})^",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'(",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}|",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}*",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": {}}:",
    "label": 1
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "';sleep(5000);'",
    "label": 1
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'|",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})'",
    "label": 0
  },
  {
    "text": "|| 1==1\"",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345''",
    "label": 0
  },
  {
    "text": "0;return true=",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1';",
    "label": 1
  },
  {
    "text": "0;return true{",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''{",
    "label": 0
  },
  {
    "text": "$where: '1 == 1']",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}});",
    "label": 1
  },
  {
    "text": "0;return true^",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})}",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}$",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})(",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']};",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000);",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": *}, {\"isAdmin\": true}]}{",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "|| sleep(5))",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}{",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);(",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": ]}, {\"isAdmin\": true}]})",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})*",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}(",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'^",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'=",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'{",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": [}}|",
    "label": 1
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '';",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']}))",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);;",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});*",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection''",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345';",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}*",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'}",
    "label": 0
  },
  {
    "text": "{}(",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}*",
    "label": 0
  },
  {
    "text": "0;return true=",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}:",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}*",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}(",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);'",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1=",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection':",
    "label": 1
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']}):",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1''",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});]",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}=",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}'",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)'",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}$",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}[",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();(",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})^",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}^",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": $, \"password\": $}[",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}|",
    "label": 1
  },
  {
    "text": "|| 1==1=",
    "label": 1
  },
  {
    "text": "|| sleep(5);",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();|",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "|| sleep(5)=",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "$where: '1 == 1''",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'=",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'^",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}}",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}:",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "{\"user\": :, \"password\": :}(",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1';",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500=",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1}",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'|",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500;",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'$",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": :}, {\"isAdmin\": true}]}}",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'*",
    "label": 1
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1:",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "|| sleep(5)'",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)|",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();=",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}*",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'[",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto}",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27*",
    "label": 1
  },
  {
    "text": "|| sleep(5))",
    "label": 1
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);;",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}};",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019$",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'|",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}*",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'{",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": [}, {\"isAdmin\": true}]}$",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}){",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1]",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1']",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto(",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}[",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": {}}$",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}*",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": ;}}(",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection';",
    "label": 1
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);^",
    "label": 1
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'^",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27*",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '']",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}|",
    "label": 0
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}^",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']}):",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'(",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}'",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});\"",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1^",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}(",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1';",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}]",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'|",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)=",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}\"",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500}",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'|",
    "label": 0
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a=",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto=",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "|| sleep(5){",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})=",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)[",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}[",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});\"",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}=",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}$",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}[",
    "label": 0
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}'",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'$",
    "label": 0
  },
  {
    "text": "{\"user\": {, \"password\": {})",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1':",
    "label": 1
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}})",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']});",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}}",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}$",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "|| 1==1\"",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});:",
    "label": 1
  },
  {
    "text": "|| sleep(5)\"",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})(",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);}",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'*",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"})",
    "label": 0
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}'",
    "label": 1
  },
  {
    "text": "|| 1==1=",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']}):",
    "label": 0
  },
  {
    "text": "|| sleep(5)\"",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}(",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019|",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1']",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})|",
    "label": 0
  },
  {
    "text": "|| 1==1]",
    "label": 1
  },
  {
    "text": "{\"user\": [, \"password\": [};",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})'",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto(",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password};",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1\"",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}:",
    "label": 0
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "|| 1==1'",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto(",
    "label": 1
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'[",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '';",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": ^}}(",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1')",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}}",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1[",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}(",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password''",
    "label": 0
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'|",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'$",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password';",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}=",
    "label": 1
  },
  {
    "text": "{\"user\": ], \"password\": ]}'",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}|",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}=",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": ]}, {\"isAdmin\": true}]}\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}(",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}|",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}$",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);;",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);}",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto(",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();*",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'|",
    "label": 0
  },
  {
    "text": "';sleep(5000);*",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'{",
    "label": 1
  },
  {
    "text": "|| sleep(5);",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": (}}(",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1''",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019^",
    "label": 1
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1(",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}'",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})'",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}(",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}){",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})'",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}}",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1}",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1|",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}]",
    "label": 0
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"})",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}){",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a|",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1$",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}})",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}^",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a}",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}=",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);;",
    "label": 1
  },
  {
    "text": "|| 1==1\"",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'{",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}:",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1{",
    "label": 1
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019|",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1':",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}{",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1(",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019)",
    "label": 1
  },
  {
    "text": "{}\"",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": *}};",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}{",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto$",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);;",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})\"",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27}",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'|",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'[",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "0;return true)",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019;",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}|",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}^",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}*",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": '}}(",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'{",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}):",
    "label": 1
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }};",
    "label": 0
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"})",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);;",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})\"",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();:",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}{",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}\"",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})[",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}'",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1')",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27{",
    "label": 1
  },
  {
    "text": "0;return true;",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}:",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}$",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});^",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "|| sleep(5)(",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1^",
    "label": 1
  },
  {
    "text": "|| sleep(5);",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});'",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});$",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});(",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}(",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}};",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": :}, {\"isAdmin\": true}]}:",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1')",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'|",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}'",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}\"",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password})",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": =}}{",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})'",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": \"}, {\"isAdmin\": true}]}=",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});}",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}:",
    "label": 0
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)\"",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'=",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}'",
    "label": 1
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}{",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27(",
    "label": 1
  },
  {
    "text": "{\"user\": {, \"password\": {}:",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})^",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']};",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}]",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();}",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'|",
    "label": 0
  },
  {
    "text": "{}:",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": '}}*",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}*",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}'",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": ]}}$",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27*",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}]",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1';",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}\"",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "$where: '1 == 1':",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}(",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}$",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }})",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})[",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}]",
    "label": 0
  },
  {
    "text": "{\"user\": [, \"password\": [})",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto[",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": }}, {\"isAdmin\": true}]}{",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']}):",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000):",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}(",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}=",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "|| sleep(5)\"",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'^",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1\"",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)[",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ^}}(",
    "label": 1
  },
  {
    "text": "|| 1==1[",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})(",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});(",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019)",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500$",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}*",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})|",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']});",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}'",
    "label": 1
  },
  {
    "text": "|| sleep(5)(",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}(",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}}):",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1}",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'{",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}$",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto'",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);;",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1(",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": (}}[",
    "label": 1
  },
  {
    "text": "|| sleep(5){",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": |}}{",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}]",
    "label": 0
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto[",
    "label": 1
  },
  {
    "text": "|| 1==1}",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}};",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}|",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1''",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}*",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "|| sleep(5)(",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "|| 1==1[",
    "label": 1
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}]",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'(",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}){",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});\"",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1}",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1';",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500)",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})*",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);:",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}}):",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}|",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']}))",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}{",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);$",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "$where: '1 == 1':",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'^",
    "label": 1
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''^",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '''",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}}):",
    "label": 0
  },
  {
    "text": "|| 1==1)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": |}};",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "0;return true=",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}\"",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}})",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);(",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a[",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'=",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a[",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}^",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": ^}}|",
    "label": 1
  },
  {
    "text": "';sleep(5000);'",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1']",
    "label": 1
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": $}}\"",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'(",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1;",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})$",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})(",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();;",
    "label": 1
  },
  {
    "text": "{}]",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}*",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}})",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto'",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1{",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});(",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1*",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a\"",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();]",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']};",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019]",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": {}}*",
    "label": 1
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1':",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']}):",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "|| sleep(5);",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00*",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})\"",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}*",
    "label": 0
  },
  {
    "text": "0;return true\"",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']});",
    "label": 0
  },
  {
    "text": "{\"user\": }, \"password\": }}}",
    "label": 0
  },
  {
    "text": "';sleep(5000);'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ;}}{",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'\"",
    "label": 0
  },
  {
    "text": "|| sleep(5)*",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}$",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"}}^",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)[",
    "label": 1
  },
  {
    "text": "|| sleep(5){",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1|",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)(",
    "label": 1
  },
  {
    "text": "';sleep(5000);^",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email';",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27{",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a'",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})(",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}=",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27]",
    "label": 1
  },
  {
    "text": "|| 1==1*",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00}",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": *}}$",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27'",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": ]}}^",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();^",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'$",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});]",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})[",
    "label": 0
  },
  {
    "text": "|| sleep(5)(",
    "label": 1
  },
  {
    "text": "$where: '1 == 1''",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}:",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}^",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto)",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);|",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}=",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}})",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "$where: '1 == 1']",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "';sleep(5000);{",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a$",
    "label": 1
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);[",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);}",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}[",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']});",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '''",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password})",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'*",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});}",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}:",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": ]}}'",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'|",
    "label": 1
  },
  {
    "text": "0;return true*",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'|",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}|",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}(",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})$",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}(",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "{\"user\": }, \"password\": }}(",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019:",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a*",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}\"",
    "label": 1
  },
  {
    "text": "';sleep(5000);]",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''^",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}{",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "|| sleep(5);",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27]",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "|| 1==1}",
    "label": 1
  },
  {
    "text": "{\"user\": =, \"password\": =}(",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}^",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500]",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}]",
    "label": 1
  },
  {
    "text": "0;return true:",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})(",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}^",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})]",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})|",
    "label": 0
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}^",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "|| 1==1\"",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}\"",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$regex\": \"^{}\"}}}",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''}",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": '}}(",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}\"",
    "label": 1
  },
  {
    "text": "{\"user\": ^, \"password\": ^}'",
    "label": 0
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'*",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'}",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": (}, {\"isAdmin\": true}]}\"",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27:",
    "label": 1
  },
  {
    "text": "{};",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}{",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'=",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27]",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1(",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'=",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})^",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}:",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);]",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}(",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'(",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'(",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''$",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}:",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }};",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto{",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}{",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{}(",
    "label": 0
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a}",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);)",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})*",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}^",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": :}}$",
    "label": 1
  },
  {
    "text": "|| sleep(5)\"",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": *}}}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'=",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}[",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}'",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})=",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);[",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}",
    "label": 0
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1''",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00|",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']}){",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}^",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019(",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}};",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": =}}{",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'(",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone';",
    "label": 0
  },
  {
    "text": "0;return true(",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);|",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'{",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});(",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);^",
    "label": 1
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection')",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": *}, {\"isAdmin\": true}]}'",
    "label": 1
  },
  {
    "text": "{\"user\": \", \"password\": \"};",
    "label": 0
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1''",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}$",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500:",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}'",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email']",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\"",
    "label": 1
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "{\"user\": *, \"password\": *}^",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}|",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}(",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}|",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});'",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto^",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}[",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"}}\"",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'[",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'*",
    "label": 0
  },
  {
    "text": "{}=",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})*",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}|",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.user, \"password\": req.query.password}|",
    "label": 0
  },
  {
    "text": "{}(",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}(",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})[",
    "label": 1
  },
  {
    "text": "|| 1==1$",
    "label": 1
  },
  {
    "text": "|| sleep(5)}",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}$",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}]",
    "label": 1
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1|",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'}",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'\"",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);=",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}|",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": }}}(",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": [}}\"",
    "label": 1
  },
  {
    "text": "0;return true*",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}};",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}|",
    "label": 0
  },
  {
    "text": "|| sleep(5)[",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}",
    "label": 0
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500\"",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}]",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}'",
    "label": 0
  },
  {
    "text": "$where: '1 == 1')",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'{",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "|| 1==1^",
    "label": 1
  },
  {
    "text": "0;return true}",
    "label": 1
  },
  {
    "text": "{}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);\"",
    "label": 1
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}]",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'}",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();;",
    "label": 1
  },
  {
    "text": "0;return true]",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'[",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto|",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00(",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}};",
    "label": 0
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == '']",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1'",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}|",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase();\"",
    "label": 1
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00[",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "|| sleep(5)'",
    "label": 1
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",
    "label": 0
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}{",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']});",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345':",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}:",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}:",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}(",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto:",
    "label": 1
  },
  {
    "text": "|| 1==1;",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}(",
    "label": 0
  },
  {
    "text": "{\"user\": req.params['name'], \"password\": req.params['pass']}]",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500)",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500:",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)]",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"};",
    "label": 0
  },
  {
    "text": "';sleep(5000);|",
    "label": 1
  },
  {
    "text": "|| 1==1^",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": *}}:",
    "label": 1
  },
  {
    "text": "|| sleep(5)]",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);^",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1':",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019|",
    "label": 1
  },
  {
    "text": "|| sleep(5)\"",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": \"guest\"}}{",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1'(",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00]",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})|",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00$",
    "label": 1
  },
  {
    "text": "{\"user\": ], \"password\": ]}:",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}^",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});{",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": [}, {\"isAdmin\": true}]}{",
    "label": 1
  },
  {
    "text": "this.hidden == false && this.category == ''; return '' == ''",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "{ \"$or\": [ {}, { \"a\": \"a)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"testuser\"}}",
    "label": 0
  },
  {
    "text": "|| this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "|| 1==1'",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'^",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);=",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1:",
    "label": 1
  },
  {
    "text": "';sleep(5000);(",
    "label": 1
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}]",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "0;return true\"",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}",
    "label": 0
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "|| 1==1*",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": [}})",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();)",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "';sleep(5000);$",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['name'], \"password\": request.GET['pass']}$",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});}",
    "label": 1
  },
  {
    "text": "{}^",
    "label": 0
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1(",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}|",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1''",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"})",
    "label": 1
  },
  {
    "text": "';sleep(5000);\"",
    "label": 1
  },
  {
    "text": "|| 1==1'",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'\"",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}|",
    "label": 0
  },
  {
    "text": "' } ], $comment:'successful MongoDB injection'{",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": (}};",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": }}, {\"isAdmin\": true}]})",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);{",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "|| 1==1}",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00=",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "';sleep(5000);)",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();\"",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}'",
    "label": 0
  },
  {
    "text": "|| sleep(5))",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}|",
    "label": 0
  },
  {
    "text": "';sleep(5000);=",
    "label": 1
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27(",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}'",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})(",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})^",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "';sleep(5000);'",
    "label": 1
  },
  {
    "text": "{\"_id\": \"001\", \"name\": \"John Doe\", \"department\": \"HR\", \"salary\": 50000}}",
    "label": 0
  },
  {
    "text": "$where: '1 == 1'(",
    "label": 1
  },
  {
    "text": "|| sleep(5)$",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$gt\": =}}]",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']})",
    "label": 0
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}}*",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": *}}}",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})(",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}^",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": (}}:",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}$",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);'",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})",
    "label": 0
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}}:",
    "label": 1
  },
  {
    "text": "{\"user\": \"hacker\", \"password\": {\"$ne\": \"\"}}]",
    "label": 1
  },
  {
    "text": "db.injection.insert({success:1});$",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)}",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);*",
    "label": 1
  },
  {
    "text": "';sleep(5000);:",
    "label": 1
  },
  {
    "text": "';sleep(5000);}",
    "label": 1
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$gt\": ;}}}",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1']",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'|",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'",
    "label": 0
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}=",
    "label": 0
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}|",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}'",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['user'], \"password\": request.GET['password']})]",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": \"john\", \"age\": {\"$gt\": 25}})\"",
    "label": 0
  },
  {
    "text": "db.users.find({\"user\": request.GET['name'], \"password\": request.GET['pass']}):",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}:",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})",
    "label": 0
  },
  {
    "text": "db['users'].find({:user => req.params['user'], :password => req.params['password']})}",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})^",
    "label": 1
  },
  {
    "text": "{\"type\": \"user\",\"name\": \"oops\", \"roles\": [\"_admin\"], \"roles\": [], \"password\":\"apple\"}]",
    "label": 1
  },
  {
    "text": "';sleep(5000);;",
    "label": 1
  },
  {
    "text": "{\"$or\": [{\"username\": '}, {\"isAdmin\": true}]}^",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1''",
    "label": 1
  },
  {
    "text": "{\"user\": req.query.name, \"password\": req.query.pass}",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "0;return true*",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']})=",
    "label": 0
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}=",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);^",
    "label": 1
  },
  {
    "text": "|| sleep(5)^",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500*",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345'",
    "label": 0
  },
  {
    "text": "{\"$or\": [{\"username\": '}, {\"isAdmin\": true}]}^",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"}}*",
    "label": 1
  },
  {
    "text": "|| 1==1(",
    "label": 1
  },
  {
    "text": "|| 1==1}",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'^",
    "label": 1
  },
  {
    "text": "true, $where: '1 == 1'*",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "{\"user\": ], \"password\": ]}:",
    "label": 0
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);*",
    "label": 1
  },
  {
    "text": "0;return true;var%20password%20=%20this.password.match(/.*/);:",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "{\"$where\": \"this.username === '{}'\"}*",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}}",
    "label": 0
  },
  {
    "text": "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^md\" }}[",
    "label": 0
  },
  {
    "text": "%27%3B%20return%20%27%27%20==%20%27)",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);(",
    "label": 1
  },
  {
    "text": "|| sleep(5){",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": \"}}$",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);{",
    "label": 1
  },
  {
    "text": "login[$nin][]=admin&login[$nin][]=test&pass[$ne]=toto*",
    "label": 1
  },
  {
    "text": "';sleep(5000);[",
    "label": 1
  },
  {
    "text": "|| sleep(5);",
    "label": 1
  },
  {
    "text": "db['users'].find({:user => req.params['name'], :password => req.params['pass']}))",
    "label": 0
  },
  {
    "text": "0;return true:",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'(",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase();)",
    "label": 1
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}|",
    "label": 0
  },
  {
    "text": "0;return true|",
    "label": 1
  },
  {
    "text": "|| 1==1|",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)(",
    "label": 1
  },
  {
    "text": "{\"user\": req.params['user'], \"password\": req.params['password']}[",
    "label": 0
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password'\"",
    "label": 0
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019{",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00:",
    "label": 1
  },
  {
    "text": "{\"user\": \"john\", \"password\": \"qwerty\"}\"",
    "label": 0
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email'",
    "label": 0
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})|",
    "label": 1
  },
  {
    "text": "|| sleep(5)=",
    "label": 1
  },
  {
    "text": "$where: '1 == 1'(",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "|| sleep(5):",
    "label": 1
  },
  {
    "text": "{\"user\": \"{}\", \"password\": \"{}\"}",
    "label": 0
  },
  {
    "text": "true, $where: '1 == 1':",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$regex\": \"^test\"}}",
    "label": 0
  },
  {
    "text": "{\"category\": \"electronics\", \"price\": {\"$gt\": 200}, \"name\": {\"$regex\": \"^S\"}}:",
    "label": 0
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00)",
    "label": 1
  },
  {
    "text": "}); db.dropDatabase(); db.insert({username: \u2018dummy \u2019, password: \u2018dummy\u2019;",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00{",
    "label": 1
  },
  {
    "text": "%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500^",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1'{",
    "label": 1
  },
  {
    "text": "{\"user\": request.GET['user'], \"password\": request.GET['password']}",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);'",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'{",
    "label": 0
  },
  {
    "text": "db.collection('users').find({:user => req.params['user'], :password => req.params['password']})$",
    "label": 0
  },
  {
    "text": "|| 1==1{",
    "label": 1
  },
  {
    "text": "SELECT * FROM beer-sample WHERE city='' AND '1'='0' UNION SELECT * FROM system:keyspaces WHERE '1'='1';",
    "label": 1
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);}",
    "label": 1
  },
  {
    "text": "db.collection('users').find({\"user\": \"hacker\", \"password\": {\"&ne\": \"\"}})'",
    "label": 1
  },
  {
    "text": "' && this.password.match(/.*/)//+%00^",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345')",
    "label": 0
  },
  {
    "text": "';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);;",
    "label": 1
  },
  {
    "text": "|| 1==1:",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}})",
    "label": 0
  },
  {
    "text": "{\"user\": \"alice\", \"password\": \"123456\"}",
    "label": 0
  },
  {
    "text": "0;var date=new Date(); do{curDate = new Date();}while(curDate-date<10000)=",
    "label": 1
  },
  {
    "text": "|| this.password.match(/.*/)//+%00;",
    "label": 1
  },
  {
    "text": "0;return true$",
    "label": 1
  },
  {
    "text": "{\"category\": \"electronics\"}",
    "label": 0
  },
  {
    "text": "login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1|",
    "label": 1
  },
  {
    "text": "{\"selector\": {\"department\": \"engineering\"}};",
    "label": 0
  },
  {
    "text": "' && this.password.match(/.*/)//+%00'",
    "label": 1
  },
  {
    "text": "PartitionKey eq 'Customers' and RowKey eq '12345' and Password eq 'password' and Email eq 'email' and Phone eq 'phone'}",
    "label": 0
  },
  {
    "text": "db.injection.insert({success:1});:",
    "label": 1
  },
  {
    "text": "login%255B%2524gt%255D%3Dadmin%26login%255B%2524lt%255D%3Dtest%26pass%255B%2524ne%255D%3D1;",
    "label": 1
  },
  {
    "text": "' && this.passwordzz.match(/.*/)//+%00\"",
    "label": 1
  },
  {
    "text": "{\"username\": {\"$ne\": *}}=",
    "label": 1
  }
]